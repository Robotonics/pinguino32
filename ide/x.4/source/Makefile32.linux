# ------------------------------------------------------------------------------
# Makefile32.linux
# Linux Makefile for 32-bit Pinguino
# Regis Blanchot <rblanchot@gmail.com> 
# ------------------------------------------------------------------------------

# ------------------------------------------------------------------------------
# Directories
# ------------------------------------------------------------------------------
# HOME, PDEDIR, PROC & BOARD are defined in pinguino.py

OSDIR		= linux
SRCDIR		= $(HOME)/source
P32DIR		= $(HOME)/p32
P32CORE		= $(HOME)/$(OSDIR)/p32
BINDIR		= $(P32CORE)/bin
INCDIR		= $(P32DIR)/include
LKRDIR		= $(P32DIR)/lkr/$(BOARD)
OBJDIR		= $(P32DIR)/obj/non-free

INCLUDEDIRS	= -I$(INCDIR)/non-free\
			  -I$(INCDIR)/pinguino/core\
			  -I$(INCDIR)/pinguino/libraries\
			  -I$(LKRDIR)\
			  -I$(PDEDIR)\
			  -I$(OBJDIR)

LIBDIRS		= -L$(OBJDIR)/usb

# ------------------------------------------------------------------------------
# Various options
# ------------------------------------------------------------------------------
# - heap size / Regis Blanchot 2012
# - cdc library / Jean-pierre Mandon 2012
# - MIPS16/MIPS32 option (MIPS16 option could drastically reduce code size) / ??? 2013 
# - unsupported record in hex file / Jean-pierre Mandon 2012
#		04		 : 4 bytes
#		0000	 : address
#		05		 : record type = Start_Linear_Address_Record
#		9D004000 : address where the user program should start
#				 : _RESET_ADDR (see lkr/procdefs.ld)
#		1A		 : checksum
# ------------------------------------------------------------------------------

ifneq (,$(filter $(BOARD),PIC32_PINGUINO_220 PINGUINO32MX220 PINGUINO32MX250))
	HEAP_SIZE   = 512
	CDCLIBRARY  = libcdc220.a
	__MIPS16_ENABLE__ = true
	BADRECORD   = '^:040000059D0040001A'
else
	HEAP_SIZE   = 16384
	CDCLIBRARY  = libcdc.a
	__MIPS16_ENABLE__ = false
	BADRECORD   ='^:040000059D006000FA'
endif

# ------------------------------------------------------------------------------
# commands
# ------------------------------------------------------------------------------

ifdef CPLUPLUS
	CC		  = $(BINDIR)/mips-elf-g++
	LIBS	  = -lstdc++ -lm -lgcc -lc
else
	CC		  = $(BINDIR)/mips-elf-gcc
	LIBS	  = -lm -lgcc -lc
endif

OBJC		  = $(BINDIR)/mips-elf-objcopy

RM			  = rm -f -v
CP			  = cp
MV			  = mv

# ------------------------------------------------------------------------------
# flags
# ------------------------------------------------------------------------------

ifeq (__MIPS16_ENABLE__, true)
	MIPS16_INTER= -minterlink-mips16
	MIPS16_OPT  = -mips16
endif

#-fdollars-in-identifiers for ISRwrapper.S
CFLAGS			= -fdollars-in-identifiers $(INCLUDEDIRS)

LDFLAGS			= $(LIBDIRS) $(LIBS)

# -Os option leads to errors when non-zero initialized static variable are defined
ELF_FLAGS		= -EL -O3 -march=24kc -msoft-float $(MIPS16_INTER)\
				  -ffunction-sections\
				  -fdata-sections\
				  -Wl,--gc-sections\
				  -Wl,-L$(OBJDIR)\
				  -Wl,--defsym,_min_heap_size=$(HEAP_SIZE)\
				  -Wl,-Map=$(SRCDIR)/output.map\
				  -D __PIC32MX__ -D __$(PROC)__ -D $(BOARD)\
				  -T$(LKRDIR)/procdefs.ld\
				  -T$(LKRDIR)/elf32pic32mx.x

#-------------------------------------------------------------------------------
#	rules
#-------------------------------------------------------------------------------

all: clean copy compile exec correct

clean:
	#---------------------------------------------------------------------------
	#	cleaning all build files
	#---------------------------------------------------------------------------
	$(RM) $(SRCDIR)/main32.o
	$(RM) $(SRCDIR)/main32.elf
	$(RM) $(SRCDIR)/main32.hex
	$(RM) $(OBJDIR)/processor.o

copy:
	#---------------------------------------------------------------------------
	#	adding proc. definitions
	#---------------------------------------------------------------------------
	cp $(OBJDIR)/$(PROC).o $(OBJDIR)/processor.o

compile:
	#---------------------------------------------------------------------------
	#	compiling and linking
	#---------------------------------------------------------------------------
	#$(CC) $(ELF_FLAGS) $(LDFLAGS) $(CFLAGS) -o $(SRCDIR)/main32.elf $(SRCDIR)/main32.c
	$(CC) $(ELF_FLAGS) $(LDFLAGS) $(CFLAGS) $(MIPS16_OPT) -c -o $(SRCDIR)/main32.o $(SRCDIR)/main32.c
	$(CC) $(ELF_FLAGS) $(LDFLAGS) $(CFLAGS) -o $(SRCDIR)/main32.elf\
		$(SRCDIR)/main32.o\
		$(OBJDIR)/crt0.S\
		$(OBJDIR)/processor.o\
		$(OBJDIR)/usb/$(CDCLIBRARY)\
		$(OBJDIR)/usb/libadb.a\
		$(LKRDIR)/ISRwrapper.S\
		$(INCDIR)/non-free/p32xxxx.h\
		$(LIBS)

exec:
	#---------------------------------------------------------------------------
	#	translating elf to hex
	#---------------------------------------------------------------------------
	$(OBJC) -O ihex $(SRCDIR)/main32.elf $(SRCDIR)/main32.hex

correct:
	#---------------------------------------------------------------------------
	#	fixing bad record
	#---------------------------------------------------------------------------
	grep --binary --invert-match $(BADRECORD) $(SRCDIR)/main32.hex > $(SRCDIR)/temp.hex
	mv $(SRCDIR)/temp.hex $(SRCDIR)/main32.hex	  
