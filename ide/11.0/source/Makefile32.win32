SHELL			=	cmd.exe

# ------------------------------------------------------------------------------
# Makefile.win32 \ 32-bit Pinguino
# Regis Blanchot <rblanchot@gmail.com> 
# ------------------------------------------------------------------------------

# ------------------------------------------------------------------------------
# directories
# ------------------------------------------------------------------------------
# HOME, PDEDIR, PROC & BOARD are defined in pinguinobetax.py
 
OSDIR			=	win32
SRCDIR		=	$(HOME)\source
P32DIR		=	$(HOME)\p32
P32CORE		=	$(HOME)\$(OSDIR)\p32
BINDIR		=	$(P32CORE)\bin
INCDIR		=	$(P32DIR)\include
LKRDIR		=	$(P32DIR)\lkr\$(BOARD)
OBJDIR		=	$(P32DIR)\obj\non-free

INCLUDEDIRS	=	-I$(INCDIR)\non-free \
					-I$(INCDIR)\pinguino\core \
					-I$(INCDIR)\pinguino\libraries \
					-I$(LKRDIR) \
					-I$(PDEDIR) \
					-I$(OBJDIR)

#					-I$(P32DIR)\bin\$(OSDIR)\mips-elf\include\
#					-I$(SRCDIR)\
#					-I$(OBJDIR)\usb

LIBDIRS		=	-L$(OBJDIR)\usb

# ------------------------------------------------------------------------------
# heap size / Regis Blanchot 2012
# ------------------------------------------------------------------------------

HEAP_SIZE = 16384
ifeq ($(BOARD),PIC32_PINGUINO_220)
	HEAP_SIZE = 512
endif
ifeq ($(BOARD),GENERIC32MX220F032)
	HEAP_SIZE = 512
endif

# ------------------------------------------------------------------------------
# select the cdc library / Jean-pierre Mandon 2012
# ------------------------------------------------------------------------------

CDCLIBRARY = libcdc.a
ifeq ($(BOARD),PIC32_PINGUINO_220)
	CDCLIBRARY = libcdc220.a
endif
ifeq ($(BOARD),GENERIC32MX250F128)
	CDCLIBRARY = libcdc220.a
endif
ifeq ($(BOARD),GENERIC32MX220F032)
	CDCLIBRARY = libcdc220.a
endif

# ------------------------------------------------------------------------------
# select MIPS16/MIPS32 option
# MIPS16 option could drastically reduce code size. 
# ------------------------------------------------------------------------------
__MIPS16_ENABLE__	= true
ifdef __MIPS16_ENABLE__
	MIPS16_INTER = -minterlink-mips16
	MIPS16_OPT   = -mips16
endif

# ------------------------------------------------------------------------------

# ------------------------------------------------------------------------------
# commands
# ------------------------------------------------------------------------------

CC				=	$(BINDIR)\mips-gcc.exe
OBJC			=	$(BINDIR)\mips-objcopy.exe
LIBS			=	-lm -lgcc -lc
#-nostdlib
#LIBS			=	-lstdc++ -lm -lgcc -lc
RM				=	@del
CP				=	@copy
MV				=	@move

# ------------------------------------------------------------------------------
# flags
# ------------------------------------------------------------------------------

#					-c\
#					-x c++
#					-x c
#					-pedantic -Wall\
#					-std=c99 

CFLAGS		=	-fdollars-in-identifiers $(INCLUDEDIRS) -msoft-float -ffunction-sections -fdata-sections 

LDFLAGS		=	$(LIBDIRS) $(LIBS)

ELF_FLAGS	=	-EL -Os -ffunction-sections -fdata-sections -Wl,--gc-sections -march=24kc \
				-msoft-float \
				$(MIPS16_INTER)  \
				-Wl,-L$(OBJDIR) \
				-Wl,--defsym,_min_heap_size=$(HEAP_SIZE) \
				-Wl,-Map=$(SRCDIR)\output.map \
				-D __PIC32MX__ -D __$(PROC)__ -D $(BOARD) \
				-T$(LKRDIR)\procdefs.ld \
				-T$(LKRDIR)\elf32pic32mx.x

#-------------------------------------------------------------------------------
#	rules   
#-------------------------------------------------------------------------------

all: clean copy link exec correct

clean:
	if exist $(SRCDIR)\main32.o $(RM) $(SRCDIR)\main32.o
	if exist $(SRCDIR)\main32.elf $(RM) $(SRCDIR)\main32.elf
	if exist $(SRCDIR)\main32.hex $(RM) $(SRCDIR)\main32.hex
	if exist $(OBJDIR)\processor.o $(RM) $(OBJDIR)\processor.o

copy:
	$(CP) $(OBJDIR)\$(PROC).o $(OBJDIR)\processor.o > nul

link:
	$(CC) $(ELF_FLAGS) $(LDFLAGS) $(CFLAGS) $(MIPS16_OPT) -c -o $(SRCDIR)\main32.o $(SRCDIR)\main32.c 
	$(CC) $(ELF_FLAGS) $(LDFLAGS) $(CFLAGS) -o $(SRCDIR)\main32.elf  \
		$(SRCDIR)\main32.o \
		$(OBJDIR)\crt0.S \
		$(OBJDIR)\processor.o \
		$(OBJDIR)\usb\$(CDCLIBRARY) \
		$(OBJDIR)\usb\libadb.a \
		$(LKRDIR)\ISRwrapper.S \
		$(INCDIR)\non-free\p32xxxx.h \
		-lm -lgcc -lc

exec:
	$(OBJC) -O ihex $(SRCDIR)\main32.elf $(SRCDIR)\main32.hex
	
correct:
	$(CP) $(SRCDIR)\main32.hex $(SRCDIR)\main32tmp.hex > nul

