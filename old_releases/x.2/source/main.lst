gplink-0.13.7 beta
Copyright (c) 1998-2005 gputils project
Listing File Generated: 4-22-2012  12:53:19
 
 
Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 2.9.0 #5416 (Aug  9 2009) (UNIX)
                                           ; This file was generated Sun Apr 22 12:53:19 2012
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f2550
                                           
                                           	radix dec
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global _rx
                                           	global _wpointer
                                           	global _rpointer
                                           	global _analog_init
                                           	global _analogReference
                                           	global _analogread
                                           	global _pprintf
                                           	global _psprintf
                                           	global _serial_begin
                                           	global _serial_available
                                           	global _serial_putchar
                                           	global _serial_interrupt
                                           	global _serial_read
                                           	global _serial_flush
                                           	global _serial_printf
                                           	global _serial_getkey
                                           	global _serial_getstring
                                           	global _serial_print
                                           	global _serial_println
                                           	global _epap_in
                                           	global _epap_out
                                           	global _epapin_init
                                           	global _epapout_init
                                           	global _setup
                                           	global _loop
                                           	global _pinguino_main
                                           	global _high_priority_isr
                                           	global _low_priority_isr
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern __gptrget3
                                           	extern __gptrput1
                                           	extern __gptrput3
                                           	extern __gptrget1
                                           	extern __gptrget2
                                           	extern _SPPDATAbits
                                           	extern _SPPCFGbits
                                           	extern _SPPEPSbits
                                           	extern _SPPCONbits
                                           	extern _UFRMLbits
                                           	extern _UFRMHbits
                                           	extern _UIRbits
                                           	extern _UIEbits
                                           	extern _UEIRbits
                                           	extern _UEIEbits
                                           	extern _USTATbits
                                           	extern _UCONbits
                                           	extern _UADDRbits
                                           	extern _UCFGbits
                                           	extern _UEP0bits
                                           	extern _UEP1bits
                                           	extern _UEP2bits
                                           	extern _UEP3bits
                                           	extern _UEP4bits
                                           	extern _UEP5bits
                                           	extern _UEP6bits
                                           	extern _UEP7bits
                                           	extern _UEP8bits
                                           	extern _UEP9bits
                                           	extern _UEP10bits
                                           	extern _UEP11bits
                                           	extern _UEP12bits
                                           	extern _UEP13bits
                                           	extern _UEP14bits
                                           	extern _UEP15bits
                                           	extern _PORTAbits
                                           	extern _PORTBbits
                                           	extern _PORTCbits
                                           	extern _PORTDbits
                                           	extern _PORTEbits
                                           	extern _LATAbits
                                           	extern _LATBbits
                                           	extern _LATCbits
                                           	extern _LATDbits
                                           	extern _LATEbits
                                           	extern _TRISAbits
                                           	extern _TRISBbits
                                           	extern _TRISCbits
                                           	extern _TRISDbits
                                           	extern _TRISEbits
                                           	extern _OSCTUNEbits
                                           	extern _PIE1bits
                                           	extern _PIR1bits
                                           	extern _IPR1bits
                                           	extern _PIE2bits
                                           	extern _PIR2bits
                                           	extern _IPR2bits
                                           	extern _EECON1bits
                                           	extern _RCSTAbits
                                           	extern _TXSTAbits
                                           	extern _T3CONbits
                                           	extern _CMCONbits
                                           	extern _CVRCONbits
                                           	extern _ECCP1ASbits
                                           	extern _ECCP1DELbits
                                           	extern _BAUDCONbits
                                           	extern _CCP2CONbits
                                           	extern _CCP1CONbits
                                           	extern _ADCON2bits
                                           	extern _ADCON1bits
                                           	extern _ADCON0bits
                                           	extern _SSPCON2bits
                                           	extern _SSPCON1bits
                                           	extern _SSPSTATbits
                                           	extern _T2CONbits
                                           	extern _T1CONbits
                                           	extern _RCONbits
                                           	extern _WDTCONbits
                                           	extern _HLVDCONbits
                                           	extern _OSCCONbits
                                           	extern _T0CONbits
                                           	extern _STATUSbits
                                           	extern _FSR2Hbits
                                           	extern _BSRbits
                                           	extern _FSR1Hbits
                                           	extern _FSR0Hbits
                                           	extern _INTCON3bits
                                           	extern _INTCON2bits
                                           	extern _INTCONbits
                                           	extern _TBLPTRUbits
                                           	extern _PCLATHbits
                                           	extern _PCLATUbits
                                           	extern _STKPTRbits
                                           	extern _TOSUbits
                                           	extern _usb_device_state
                                           	extern _usb_active_cfg
                                           	extern _usb_active_alt_setting
                                           	extern _SPPDATA
                                           	extern _SPPCFG
                                           	extern _SPPEPS
                                           	extern _SPPCON
                                           	extern _UFRML
                                           	extern _UFRMH
                                           	extern _UIR
                                           	extern _UIE
                                           	extern _UEIR
                                           	extern _UEIE
                                           	extern _USTAT
                                           	extern _UCON
                                           	extern _UADDR
                                           	extern _UCFG
                                           	extern _UEP0
                                           	extern _UEP1
                                           	extern _UEP2
                                           	extern _UEP3
                                           	extern _UEP4
                                           	extern _UEP5
                                           	extern _UEP6
                                           	extern _UEP7
                                           	extern _UEP8
                                           	extern _UEP9
                                           	extern _UEP10
                                           	extern _UEP11
                                           	extern _UEP12
                                           	extern _UEP13
                                           	extern _UEP14
                                           	extern _UEP15
                                           	extern _PORTA
                                           	extern _PORTB
                                           	extern _PORTC
                                           	extern _PORTD
                                           	extern _PORTE
                                           	extern _LATA
                                           	extern _LATB
                                           	extern _LATC
                                           	extern _LATD
                                           	extern _LATE
                                           	extern _TRISA
                                           	extern _TRISB
                                           	extern _TRISC
                                           	extern _TRISD
                                           	extern _TRISE
                                           	extern _OSCTUNE
                                           	extern _PIE1
                                           	extern _PIR1
                                           	extern _IPR1
                                           	extern _PIE2
                                           	extern _PIR2
                                           	extern _IPR2
                                           	extern _EECON1
                                           	extern _EECON2
                                           	extern _EEDATA
                                           	extern _EEADR
                                           	extern _RCSTA
                                           	extern _TXSTA
                                           	extern _TXREG
                                           	extern _RCREG
                                           	extern _SPBRG
                                           	extern _SPBRGH
                                           	extern _T3CON
                                           	extern _TMR3L
                                           	extern _TMR3H
                                           	extern _CMCON
                                           	extern _CVRCON
                                           	extern _ECCP1AS
                                           	extern _ECCP1DEL
                                           	extern _BAUDCON
                                           	extern _CCP2CON
                                           	extern _CCPR2L
                                           	extern _CCPR2H
                                           	extern _CCP1CON
                                           	extern _CCPR1L
                                           	extern _CCPR1H
                                           	extern _ADCON2
                                           	extern _ADCON1
                                           	extern _ADCON0
                                           	extern _ADRESL
                                           	extern _ADRESH
                                           	extern _SSPCON2
                                           	extern _SSPCON1
                                           	extern _SSPSTAT
                                           	extern _SSPADD
                                           	extern _SSPBUF
                                           	extern _T2CON
                                           	extern _PR2
                                           	extern _TMR2
                                           	extern _T1CON
                                           	extern _TMR1L
                                           	extern _TMR1H
                                           	extern _RCON
                                           	extern _WDTCON
                                           	extern _HLVDCON
                                           	extern _OSCCON
                                           	extern _T0CON
                                           	extern _TMR0L
                                           	extern _TMR0H
                                           	extern _STATUS
                                           	extern _FSR2L
                                           	extern _FSR2H
                                           	extern _PLUSW2
                                           	extern _PREINC2
                                           	extern _POSTDEC2
                                           	extern _POSTINC2
                                           	extern _INDF2
                                           	extern _BSR
                                           	extern _FSR1L
                                           	extern _FSR1H
                                           	extern _PLUSW1
                                           	extern _PREINC1
                                           	extern _POSTDEC1
                                           	extern _POSTINC1
                                           	extern _INDF1
                                           	extern _WREG
                                           	extern _FSR0L
                                           	extern _FSR0H
                                           	extern _PLUSW0
                                           	extern _PREINC0
                                           	extern _POSTDEC0
                                           	extern _POSTINC0
                                           	extern _INDF0
                                           	extern _INTCON3
                                           	extern _INTCON2
                                           	extern _INTCON
                                           	extern _PRODL
                                           	extern _PRODH
                                           	extern _TABLAT
                                           	extern _TBLPTRL
                                           	extern _TBLPTRH
                                           	extern _TBLPTRU
                                           	extern _PCL
                                           	extern _PCLATH
                                           	extern _PCLATU
                                           	extern _STKPTR
                                           	extern _TOSL
                                           	extern _TOSH
                                           	extern _TOSU
                                           	extern __moduint
                                           	extern __divuint
                                           	extern __mulint
                                           	extern __mullong
                                           	extern __divulong
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           PCL	equ	0xff9
                                           PCLATH	equ	0xffa
                                           PCLATU	equ	0xffb
                                           INTCON	equ	0xff2
                                           WREG	equ	0xfe8
                                           BSR	equ	0xfe0
                                           TOSL	equ	0xffd
                                           TOSH	equ	0xffe
                                           TOSU	equ	0xfff
                                           TBLPTRL	equ	0xff6
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           FSR2H	equ	0xfda
                                           INDF0	equ	0xfef
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           r0x05	res	1
                                           r0x06	res	1
                                           r0x07	res	1
                                           r0x08	res	1
                                           r0x09	res	1
                                           r0x0a	res	1
                                           r0x0b	res	1
                                           r0x0c	res	1
                                           r0x0d	res	1
                                           r0x0e	res	1
                                           r0x0f	res	1
                                           r0x10	res	1
                                           r0x11	res	1
                                           r0x12	res	1
                                           r0x13	res	1
                                           r0x14	res	1
                                           r0x15	res	1
                                           r0x16	res	1
                                           r0x17	res	1
                                           r0x18	res	1
                                           r0x19	res	1
                                           r0x1a	res	1
                                           
                                           udata_main_0	udata
                                           _pputchar	res	3
                                           
                                           udata_main_1	udata
                                           _pprinti_print_buf_1_1	res	12
                                           
                                           udata_main_2	udata
                                           _pprint_scr_1_1	res	2
                                           
                                           udata_main_3	udata
                                           _psprintf_out_1_1	res	3
                                           
                                           udata_main_4	udata
                                           _wpointer	res	1
                                           
                                           udata_main_5	udata
                                           _rpointer	res	1
                                           
                                           udata_main_6	udata
                                           _rx	res	128
                                           
                                           udata_main_7	udata
                                           _serial_getstring_buffer_1_1	res	80
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; ; Starting pCode block
                                           S_main__high_priority_isr	code	0X002020
                                           _high_priority_isr:
                                           ;	.line	130; /opt/pinguino/pinguino32/source/main.c	void high_priority_isr(void) interrupt
002020   cfe8     movff	0xfe8, 0xfe5       	MOVFF	WREG, POSTDEC1
002022   ffe5
002024   cfd8     movff	0xfd8, 0xfe5       	MOVFF	STATUS, POSTDEC1
002026   ffe5
002028   cfe0     movff	0xfe0, 0xfe5       	MOVFF	BSR, POSTDEC1
00202a   ffe5
00202c   cff3     movff	0xff3, 0xfe5       	MOVFF	PRODL, POSTDEC1
00202e   ffe5
002030   cff4     movff	0xff4, 0xfe5       	MOVFF	PRODH, POSTDEC1
002032   ffe5
002034   cfe9     movff	0xfe9, 0xfe5       	MOVFF	FSR0L, POSTDEC1
002036   ffe5
002038   cfea     movff	0xfea, 0xfe5       	MOVFF	FSR0H, POSTDEC1
00203a   ffe5
00203c   cffa     movff	0xffa, 0xfe5       	MOVFF	PCLATH, POSTDEC1
00203e   ffe5
                                           ;	.line	166; /opt/pinguino/pinguino32/source/main.c	if (PIR1bits.RCIF) 
002040   cffb     movff	0xffb, 0xfe5       	MOVFF	PCLATU, POSTDEC1
002042   ffe5
                                           ; #	MOVFF	FSR1L, FSR2L
                                           ; #	BTFSS	_PIR1bits, 5
                                           ; #	GOTO	_00519_DS_
                                           ; #	CALL	_serial_interrupt
                                           ; #	MOVFF	PREINC1, FSR2L
                                           ;	.line	167; /opt/pinguino/pinguino32/source/main.c	serial_interrupt();
002044   ba9e     btfsc	0x9e, 0x5, 0       	BTFSC	_PIR1bits, 5
002046   ec7a     call	0x3af4, 0           	CALL	_serial_interrupt
002048   f01d
00204a   cfe4     movff	0xfe4, 0xffb       	MOVFF	PREINC1, PCLATU
00204c   fffb
00204e   cfe4     movff	0xfe4, 0xffa       	MOVFF	PREINC1, PCLATH
002050   fffa
002052   cfe4     movff	0xfe4, 0xfea       	MOVFF	PREINC1, FSR0H
002054   ffea
002056   cfe4     movff	0xfe4, 0xfe9       	MOVFF	PREINC1, FSR0L
002058   ffe9
00205a   cfe4     movff	0xfe4, 0xff4       	MOVFF	PREINC1, PRODH
00205c   fff4
00205e   cfe4     movff	0xfe4, 0xff3       	MOVFF	PREINC1, PRODL
002060   fff3
002062   cfe4     movff	0xfe4, 0xfe0       	MOVFF	PREINC1, BSR
002064   ffe0
002066   cfe4     movff	0xfe4, 0xfd8       	MOVFF	PREINC1, STATUS
002068   ffd8
00206a   cfe4     movff	0xfe4, 0xfe8       	MOVFF	PREINC1, WREG
00206c   ffe8
00206e   0010     retfie	0                 	RETFIE	
                                           
                                           ; ; Starting pCode block
                                           S_main__low_priority_isr	code	0X004000
                                           _low_priority_isr:
                                           ;	.line	194; /opt/pinguino/pinguino32/source/main.c	void low_priority_isr(void) interrupt
004000   cfe8     movff	0xfe8, 0xfe5       	MOVFF	WREG, POSTDEC1
004002   ffe5
004004   cfd8     movff	0xfd8, 0xfe5       	MOVFF	STATUS, POSTDEC1
004006   ffe5
004008   cfe0     movff	0xfe0, 0xfe5       	MOVFF	BSR, POSTDEC1
00400a   ffe5
00400c   cff3     movff	0xff3, 0xfe5       	MOVFF	PRODL, POSTDEC1
00400e   ffe5
004010   cff4     movff	0xff4, 0xfe5       	MOVFF	PRODH, POSTDEC1
004012   ffe5
004014   cfe9     movff	0xfe9, 0xfe5       	MOVFF	FSR0L, POSTDEC1
004016   ffe5
004018   cfea     movff	0xfea, 0xfe5       	MOVFF	FSR0H, POSTDEC1
00401a   ffe5
00401c   cffa     movff	0xffa, 0xfe5       	MOVFF	PCLATH, POSTDEC1
00401e   ffe5
004020   cffb     movff	0xffb, 0xfe5       	MOVFF	PCLATU, POSTDEC1
004022   ffe5
                                           ;	.line	199; /opt/pinguino/pinguino32/source/main.c	}
004024   cfe4     movff	0xfe4, 0xffb       	MOVFF	PREINC1, PCLATU
004026   fffb
004028   cfe4     movff	0xfe4, 0xffa       	MOVFF	PREINC1, PCLATH
00402a   fffa
00402c   cfe4     movff	0xfe4, 0xfea       	MOVFF	PREINC1, FSR0H
00402e   ffea
004030   cfe4     movff	0xfe4, 0xfe9       	MOVFF	PREINC1, FSR0L
004032   ffe9
004034   cfe4     movff	0xfe4, 0xff4       	MOVFF	PREINC1, PRODH
004036   fff4
004038   cfe4     movff	0xfe4, 0xff3       	MOVFF	PREINC1, PRODL
00403a   fff3
00403c   cfe4     movff	0xfe4, 0xfe0       	MOVFF	PREINC1, BSR
00403e   ffe0
004040   cfe4     movff	0xfe4, 0xfd8       	MOVFF	PREINC1, STATUS
004042   ffd8
004044   cfe4     movff	0xfe4, 0xfe8       	MOVFF	PREINC1, WREG
004046   ffe8
004048   0010     retfie	0                 	RETFIE	
                                           
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_main__pinguino_main	code
                                           _pinguino_main:
                                           ;	.line	58; /opt/pinguino/pinguino32/source/main.c	PIE1 = 0;
003d24   6a9d     clrf	0x9d, 0             	CLRF	_PIE1
                                           ;	.line	59; /opt/pinguino/pinguino32/source/main.c	PIE2 = 0;
003d26   6aa0     clrf	0xa0, 0             	CLRF	_PIE2
                                           ;	.line	60; /opt/pinguino/pinguino32/source/main.c	ADCON1 = 0b00001111;				// AN0 to AN12 Digital I/O
003d28   0e0f     movlw	0xf                	MOVLW	0x0f
003d2a   6ec1     movwf	0xc1, 0            	MOVWF	_ADCON1
                                           ;	.line	72; /opt/pinguino/pinguino32/source/main.c	setup();
003d2c   ecac     call	0x3d58, 0           	CALL	_setup
003d2e   f01e
                                           ;	.line	79; /opt/pinguino/pinguino32/source/main.c	analog_init();
003d30   ec09     call	0x3c12, 0           	CALL	_analog_init
003d32   f01e
                                           ;	.line	105; /opt/pinguino/pinguino32/source/main.c	INTCONbits.PEIE = 1;
003d34   8cf2     bsf	0xf2, 0x6, 0         	BSF	_INTCONbits, 6
                                           ;	.line	106; /opt/pinguino/pinguino32/source/main.c	INTCONbits.GIE  = 1;
003d36   8ef2     bsf	0xf2, 0x7, 0         	BSF	_INTCONbits, 7
                                           _00510_DS_:
                                           ;	.line	124; /opt/pinguino/pinguino32/source/main.c	loop();
003d38   ec2b     call	0x3c56, 0           	CALL	_loop
003d3a   f01e
003d3c   d7fd     bra	0x3d38               	BRA	_00510_DS_
003d3e   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__loop	code
                                           _loop:
                                           ;	.line	12; /opt/pinguino/pinguino32/source/user.c	void loop() {
003c56   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003c58   ffe5
003c5a   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
003c5c   ffe5
                                           ;	.line	13; /opt/pinguino/pinguino32/source/user.c	int sensorValue = analogread(A0);
003c5e   0e0d     movlw	0xd                	MOVLW	0x0d
003c60   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003c62   ec3a     call	0x3a74, 0           	CALL	_analogread
003c64   f01d
003c66   6e00     movwf	0, 0               	MOVWF	r0x00
003c68   cff3     movff	0xff3, 0x1         	MOVFF	PRODL, r0x01
003c6a   f001
003c6c   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
                                           ; #	MOVF	r0x01, W
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
                                           ; #	MOVF	r0x00, W
                                           ; #	MOVF	r0x00, W
                                           ; #	MOVWF	r0x00
                                           ;	.line	14; /opt/pinguino/pinguino32/source/user.c	serial_println(sensorValue, DEC);
003c6e   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003c70   0e0a     movlw	0xa                	MOVLW	0x0a
003c72   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003c74   0e80     movlw	0x80               	MOVLW	0x80
003c76   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003c78   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
003c7a   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003c7c   5000     movf	0, 0, 0             	MOVF	r0x00, W
003c7e   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003c80   ecf5     call	0x39ea, 0           	CALL	_serial_println
003c82   f01c
003c84   0e05     movlw	0x5                	MOVLW	0x05
003c86   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
003c88   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003c8a   f001
003c8c   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003c8e   f000
003c90   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__setup	code
                                           _setup:
                                           ;	.line	9; /opt/pinguino/pinguino32/source/user.c	serial_begin(9600);
003d58   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003d5a   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003d5c   0e25     movlw	0x25               	MOVLW	0x25
003d5e   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003d60   0e80     movlw	0x80               	MOVLW	0x80
003d62   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003d64   ec99     call	0x3532, 0           	CALL	_serial_begin
003d66   f01a
003d68   0e04     movlw	0x4                	MOVLW	0x04
003d6a   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
003d6c   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__epapout_init	code
                                           _epapout_init:
                                           ;	.line	46; /opt/pinguino/pinguino32/source/main.c	void epapout_init() { return; }
003d8a   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__epapin_init	code
                                           _epapin_init:
                                           ;	.line	45; /opt/pinguino/pinguino32/source/main.c	void epapin_init() { return; }
003d8c   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__epap_out	code
                                           _epap_out:
                                           ;	.line	44; /opt/pinguino/pinguino32/source/main.c	void epap_out() { return; }
003d8e   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__epap_in	code
                                           _epap_in:
                                           ;	.line	43; /opt/pinguino/pinguino32/source/main.c	void epap_in() { return; }
003d90   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__serial_println	code
                                           _serial_println:
                                           ;	.line	247; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	void serial_println(char *fmt,...)
0039ea   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
0039ec   ffe5
0039ee   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
0039f0   ffd9
                                           ;	.line	249; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	serial_print(fmt);
0039f2   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
0039f4   ffe5
0039f6   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
0039f8   ffe5
0039fa   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
0039fc   ffe5
0039fe   0e02     movlw	0x2                	MOVLW	0x02
003a00   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
003a02   f000
003a04   0e03     movlw	0x3                	MOVLW	0x03
003a06   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
003a08   f001
003a0a   0e04     movlw	0x4                	MOVLW	0x04
003a0c   cfdb     movff	0xfdb, 0x2         	MOVFF	PLUSW2, r0x02
003a0e   f002
003a10   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
003a12   f002
003a14   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003a16   f001
003a18   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003a1a   f000
003a1c   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
003a1e   ffe5
003a20   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
003a22   ffe5
003a24   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
003a26   ffe5
003a28   0e02     movlw	0x2                	MOVLW	0x02
003a2a   cfdb     movff	0xfdb, 0x3         	MOVFF	PLUSW2, r0x03
003a2c   f003
003a2e   0e03     movlw	0x3                	MOVLW	0x03
003a30   cfdb     movff	0xfdb, 0x4         	MOVFF	PLUSW2, r0x04
003a32   f004
003a34   0e04     movlw	0x4                	MOVLW	0x04
003a36   cfdb     movff	0xfdb, 0x5         	MOVFF	PLUSW2, r0x05
003a38   f005
003a3a   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
003a3c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003a3e   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
003a40   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003a42   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
003a44   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003a46   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
003a48   f005
003a4a   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
003a4c   f004
003a4e   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
003a50   f003
003a52   ecd4     call	0x27a8, 0           	CALL	_serial_print
003a54   f013
003a56   0e03     movlw	0x3                	MOVLW	0x03
003a58   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	250; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	serial_printf("\n\r");
003a5a   0e00     movlw	0                  	MOVLW	UPPER(__str_7)
003a5c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003a5e   0e3c     movlw	0x3c               	MOVLW	HIGH(__str_7)
003a60   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003a62   0e52     movlw	0x52               	MOVLW	LOW(__str_7)
003a64   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003a66   ecae     call	0x3b5c, 0           	CALL	_serial_printf
003a68   f01d
003a6a   0e03     movlw	0x3                	MOVLW	0x03
003a6c   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
003a6e   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
003a70   ffd9
003a72   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__serial_print	code
                                           _serial_print:
                                           ;	.line	180; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	void serial_print(char *fmt,...)
0027a8   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
0027aa   ffe5
0027ac   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
0027ae   ffd9
0027b0   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
0027b2   ffe5
0027b4   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
0027b6   ffe5
                                           ;	.line	186; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	va_start(ap, fmt);
0027b8   0e02     movlw	0x2                	MOVLW	0x02
0027ba   24d9     addwf	0xd9, 0, 0         	ADDWF	FSR2L, W
0027bc   6e00     movwf	0, 0               	MOVWF	r0x00
0027be   0e00     movlw	0                  	MOVLW	0x00
0027c0   20da     addwfc	0xda, 0, 0        	ADDWFC	FSR2H, W
0027c2   6e01     movwf	0x1, 0             	MOVWF	r0x01
0027c4   0e03     movlw	0x3                	MOVLW	0x03
0027c6   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
0027c8   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
0027ca   2a01     incf	0x1, 0x1, 0         	INCF	r0x01, F
                                           ; #	MOVF	r0x01, W
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
                                           ; #	MOVF	r0x00, W
                                           ; #	MOVF	r0x00, W
                                           ; #	MOVWF	r0x00
                                           ;	.line	187; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	s = va_start(ap, fmt);
0027cc   0e80     movlw	0x80               	MOVLW	0x80
                                           ;	.line	189; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	switch (*s)
0027ce   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
0027d0   ffe9
0027d2   c001     movff	0x1, 0xff3         	MOVFF	r0x01, PRODL
0027d4   fff3
0027d6   ec29     call	0x52, 0             	CALL	__gptrget1
0027d8   f000
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
0027da   6e00     movwf	0, 0               	MOVWF	r0x00
0027dc   0a01     xorlw	0x1                	XORLW	0x01
0027de   e101     bnz	0x27e2               	BNZ	_00461_DS_
0027e0   d086     bra	0x28ee               	BRA	_00448_DS_
                                           _00461_DS_:
0027e2   5000     movf	0, 0, 0             	MOVF	r0x00, W
0027e4   0a02     xorlw	0x2                	XORLW	0x02
0027e6   e101     bnz	0x27ea               	BNZ	_00463_DS_
0027e8   d0f8     bra	0x29da               	BRA	_00450_DS_
                                           _00463_DS_:
0027ea   5000     movf	0, 0, 0             	MOVF	r0x00, W
0027ec   0a08     xorlw	0x8                	XORLW	0x08
0027ee   e101     bnz	0x27f2               	BNZ	_00465_DS_
0027f0   d0b9     bra	0x2964               	BRA	_00449_DS_
                                           _00465_DS_:
0027f2   5000     movf	0, 0, 0             	MOVF	r0x00, W
0027f4   0a0a     xorlw	0xa                	XORLW	0x0a
0027f6   e005     bz	0x2802                	BZ	_00446_DS_
0027f8   5000     movf	0, 0, 0             	MOVF	r0x00, W
0027fa   0a10     xorlw	0x10               	XORLW	0x10
0027fc   e101     bnz	0x2800               	BNZ	_00469_DS_
0027fe   d03c     bra	0x2878               	BRA	_00447_DS_
                                           _00469_DS_:
002800   d127     bra	0x2a50               	BRA	_00451_DS_
                                           _00446_DS_:
                                           ;	.line	192; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	serial_printf("%d",fmt);
002802   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
002804   ffe5
002806   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
002808   ffe5
00280a   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
00280c   ffe5
00280e   0e02     movlw	0x2                	MOVLW	0x02
002810   cfdb     movff	0xfdb, 0x3         	MOVFF	PLUSW2, r0x03
002812   f003
002814   0e03     movlw	0x3                	MOVLW	0x03
002816   cfdb     movff	0xfdb, 0x4         	MOVFF	PLUSW2, r0x04
002818   f004
00281a   0e04     movlw	0x4                	MOVLW	0x04
00281c   cfdb     movff	0xfdb, 0x5         	MOVFF	PLUSW2, r0x05
00281e   f005
002820   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
002822   f005
002824   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
002826   f004
002828   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
00282a   f003
00282c   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
00282e   ffe5
002830   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
002832   ffe5
002834   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
002836   ffe5
002838   0e02     movlw	0x2                	MOVLW	0x02
00283a   cfdb     movff	0xfdb, 0x3         	MOVFF	PLUSW2, r0x03
00283c   f003
00283e   0e03     movlw	0x3                	MOVLW	0x03
002840   cfdb     movff	0xfdb, 0x4         	MOVFF	PLUSW2, r0x04
002842   f004
002844   0e04     movlw	0x4                	MOVLW	0x04
002846   cfdb     movff	0xfdb, 0x5         	MOVFF	PLUSW2, r0x05
002848   f005
00284a   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
00284c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00284e   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002850   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002852   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
002854   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002856   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
002858   f005
00285a   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
00285c   f004
00285e   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
002860   f003
002862   0e00     movlw	0                  	MOVLW	UPPER(__str_3)
002864   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002866   0e3c     movlw	0x3c               	MOVLW	HIGH(__str_3)
002868   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00286a   0e42     movlw	0x42               	MOVLW	LOW(__str_3)
00286c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00286e   ecae     call	0x3b5c, 0           	CALL	_serial_printf
002870   f01d
002872   0e06     movlw	0x6                	MOVLW	0x06
002874   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	193; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	break;
002876   d120     bra	0x2ab8               	BRA	_00453_DS_
                                           _00447_DS_:
                                           ;	.line	195; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	serial_printf("%x",fmt);
002878   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
00287a   ffe5
00287c   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
00287e   ffe5
002880   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
002882   ffe5
002884   0e02     movlw	0x2                	MOVLW	0x02
002886   cfdb     movff	0xfdb, 0x3         	MOVFF	PLUSW2, r0x03
002888   f003
00288a   0e03     movlw	0x3                	MOVLW	0x03
00288c   cfdb     movff	0xfdb, 0x4         	MOVFF	PLUSW2, r0x04
00288e   f004
002890   0e04     movlw	0x4                	MOVLW	0x04
002892   cfdb     movff	0xfdb, 0x5         	MOVFF	PLUSW2, r0x05
002894   f005
002896   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
002898   f005
00289a   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
00289c   f004
00289e   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
0028a0   f003
0028a2   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
0028a4   ffe5
0028a6   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
0028a8   ffe5
0028aa   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
0028ac   ffe5
0028ae   0e02     movlw	0x2                	MOVLW	0x02
0028b0   cfdb     movff	0xfdb, 0x3         	MOVFF	PLUSW2, r0x03
0028b2   f003
0028b4   0e03     movlw	0x3                	MOVLW	0x03
0028b6   cfdb     movff	0xfdb, 0x4         	MOVFF	PLUSW2, r0x04
0028b8   f004
0028ba   0e04     movlw	0x4                	MOVLW	0x04
0028bc   cfdb     movff	0xfdb, 0x5         	MOVFF	PLUSW2, r0x05
0028be   f005
0028c0   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
0028c2   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0028c4   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
0028c6   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0028c8   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
0028ca   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0028cc   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
0028ce   f005
0028d0   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
0028d2   f004
0028d4   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
0028d6   f003
0028d8   0e00     movlw	0                  	MOVLW	UPPER(__str_4)
0028da   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0028dc   0e3c     movlw	0x3c               	MOVLW	HIGH(__str_4)
0028de   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0028e0   0e46     movlw	0x46               	MOVLW	LOW(__str_4)
0028e2   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0028e4   ecae     call	0x3b5c, 0           	CALL	_serial_printf
0028e6   f01d
0028e8   0e06     movlw	0x6                	MOVLW	0x06
0028ea   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	196; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	break;
0028ec   d0e5     bra	0x2ab8               	BRA	_00453_DS_
                                           _00448_DS_:
                                           ;	.line	198; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	serial_printf("%d",fmt);
0028ee   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
0028f0   ffe5
0028f2   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
0028f4   ffe5
0028f6   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
0028f8   ffe5
0028fa   0e02     movlw	0x2                	MOVLW	0x02
0028fc   cfdb     movff	0xfdb, 0x3         	MOVFF	PLUSW2, r0x03
0028fe   f003
002900   0e03     movlw	0x3                	MOVLW	0x03
002902   cfdb     movff	0xfdb, 0x4         	MOVFF	PLUSW2, r0x04
002904   f004
002906   0e04     movlw	0x4                	MOVLW	0x04
002908   cfdb     movff	0xfdb, 0x5         	MOVFF	PLUSW2, r0x05
00290a   f005
00290c   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
00290e   f005
002910   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
002912   f004
002914   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
002916   f003
002918   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
00291a   ffe5
00291c   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
00291e   ffe5
002920   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
002922   ffe5
002924   0e02     movlw	0x2                	MOVLW	0x02
002926   cfdb     movff	0xfdb, 0x3         	MOVFF	PLUSW2, r0x03
002928   f003
00292a   0e03     movlw	0x3                	MOVLW	0x03
00292c   cfdb     movff	0xfdb, 0x4         	MOVFF	PLUSW2, r0x04
00292e   f004
002930   0e04     movlw	0x4                	MOVLW	0x04
002932   cfdb     movff	0xfdb, 0x5         	MOVFF	PLUSW2, r0x05
002934   f005
002936   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
002938   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00293a   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
00293c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00293e   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
002940   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002942   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
002944   f005
002946   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
002948   f004
00294a   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
00294c   f003
00294e   0e00     movlw	0                  	MOVLW	UPPER(__str_3)
002950   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002952   0e3c     movlw	0x3c               	MOVLW	HIGH(__str_3)
002954   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002956   0e42     movlw	0x42               	MOVLW	LOW(__str_3)
002958   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00295a   ecae     call	0x3b5c, 0           	CALL	_serial_printf
00295c   f01d
00295e   0e06     movlw	0x6                	MOVLW	0x06
002960   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	199; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	break;
002962   d0aa     bra	0x2ab8               	BRA	_00453_DS_
                                           _00449_DS_:
                                           ;	.line	201; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	serial_printf("%o",fmt);
002964   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
002966   ffe5
002968   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
00296a   ffe5
00296c   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
00296e   ffe5
002970   0e02     movlw	0x2                	MOVLW	0x02
002972   cfdb     movff	0xfdb, 0x3         	MOVFF	PLUSW2, r0x03
002974   f003
002976   0e03     movlw	0x3                	MOVLW	0x03
002978   cfdb     movff	0xfdb, 0x4         	MOVFF	PLUSW2, r0x04
00297a   f004
00297c   0e04     movlw	0x4                	MOVLW	0x04
00297e   cfdb     movff	0xfdb, 0x5         	MOVFF	PLUSW2, r0x05
002980   f005
002982   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
002984   f005
002986   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
002988   f004
00298a   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
00298c   f003
00298e   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
002990   ffe5
002992   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
002994   ffe5
002996   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
002998   ffe5
00299a   0e02     movlw	0x2                	MOVLW	0x02
00299c   cfdb     movff	0xfdb, 0x3         	MOVFF	PLUSW2, r0x03
00299e   f003
0029a0   0e03     movlw	0x3                	MOVLW	0x03
0029a2   cfdb     movff	0xfdb, 0x4         	MOVFF	PLUSW2, r0x04
0029a4   f004
0029a6   0e04     movlw	0x4                	MOVLW	0x04
0029a8   cfdb     movff	0xfdb, 0x5         	MOVFF	PLUSW2, r0x05
0029aa   f005
0029ac   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
0029ae   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0029b0   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
0029b2   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0029b4   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
0029b6   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0029b8   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
0029ba   f005
0029bc   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
0029be   f004
0029c0   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
0029c2   f003
0029c4   0e00     movlw	0                  	MOVLW	UPPER(__str_5)
0029c6   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0029c8   0e3c     movlw	0x3c               	MOVLW	HIGH(__str_5)
0029ca   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0029cc   0e4a     movlw	0x4a               	MOVLW	LOW(__str_5)
0029ce   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0029d0   ecae     call	0x3b5c, 0           	CALL	_serial_printf
0029d2   f01d
0029d4   0e06     movlw	0x6                	MOVLW	0x06
0029d6   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	202; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	break;
0029d8   d06f     bra	0x2ab8               	BRA	_00453_DS_
                                           _00450_DS_:
                                           ;	.line	204; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	serial_printf("%b",fmt);
0029da   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
0029dc   ffe5
0029de   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
0029e0   ffe5
0029e2   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
0029e4   ffe5
0029e6   0e02     movlw	0x2                	MOVLW	0x02
0029e8   cfdb     movff	0xfdb, 0x3         	MOVFF	PLUSW2, r0x03
0029ea   f003
0029ec   0e03     movlw	0x3                	MOVLW	0x03
0029ee   cfdb     movff	0xfdb, 0x4         	MOVFF	PLUSW2, r0x04
0029f0   f004
0029f2   0e04     movlw	0x4                	MOVLW	0x04
0029f4   cfdb     movff	0xfdb, 0x5         	MOVFF	PLUSW2, r0x05
0029f6   f005
0029f8   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
0029fa   f005
0029fc   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
0029fe   f004
002a00   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
002a02   f003
002a04   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
002a06   ffe5
002a08   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
002a0a   ffe5
002a0c   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
002a0e   ffe5
002a10   0e02     movlw	0x2                	MOVLW	0x02
002a12   cfdb     movff	0xfdb, 0x3         	MOVFF	PLUSW2, r0x03
002a14   f003
002a16   0e03     movlw	0x3                	MOVLW	0x03
002a18   cfdb     movff	0xfdb, 0x4         	MOVFF	PLUSW2, r0x04
002a1a   f004
002a1c   0e04     movlw	0x4                	MOVLW	0x04
002a1e   cfdb     movff	0xfdb, 0x5         	MOVFF	PLUSW2, r0x05
002a20   f005
002a22   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
002a24   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002a26   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002a28   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002a2a   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
002a2c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002a2e   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
002a30   f005
002a32   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
002a34   f004
002a36   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
002a38   f003
002a3a   0e00     movlw	0                  	MOVLW	UPPER(__str_6)
002a3c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002a3e   0e3c     movlw	0x3c               	MOVLW	HIGH(__str_6)
002a40   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002a42   0e4e     movlw	0x4e               	MOVLW	LOW(__str_6)
002a44   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002a46   ecae     call	0x3b5c, 0           	CALL	_serial_printf
002a48   f01d
002a4a   0e06     movlw	0x6                	MOVLW	0x06
002a4c   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	205; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	break;           
002a4e   d034     bra	0x2ab8               	BRA	_00453_DS_
                                           _00451_DS_:
                                           ;	.line	207; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	serial_printf(fmt);
002a50   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
002a52   ffe5
002a54   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
002a56   ffe5
002a58   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
002a5a   ffe5
002a5c   0e02     movlw	0x2                	MOVLW	0x02
002a5e   cfdb     movff	0xfdb, 0x3         	MOVFF	PLUSW2, r0x03
002a60   f003
002a62   0e03     movlw	0x3                	MOVLW	0x03
002a64   cfdb     movff	0xfdb, 0x4         	MOVFF	PLUSW2, r0x04
002a66   f004
002a68   0e04     movlw	0x4                	MOVLW	0x04
002a6a   cfdb     movff	0xfdb, 0x5         	MOVFF	PLUSW2, r0x05
002a6c   f005
002a6e   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
002a70   f005
002a72   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
002a74   f004
002a76   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
002a78   f003
002a7a   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
002a7c   ffe5
002a7e   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
002a80   ffe5
002a82   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
002a84   ffe5
002a86   0e02     movlw	0x2                	MOVLW	0x02
002a88   cfdb     movff	0xfdb, 0x3         	MOVFF	PLUSW2, r0x03
002a8a   f003
002a8c   0e03     movlw	0x3                	MOVLW	0x03
002a8e   cfdb     movff	0xfdb, 0x4         	MOVFF	PLUSW2, r0x04
002a90   f004
002a92   0e04     movlw	0x4                	MOVLW	0x04
002a94   cfdb     movff	0xfdb, 0x5         	MOVFF	PLUSW2, r0x05
002a96   f005
002a98   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
002a9a   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002a9c   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002a9e   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002aa0   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
002aa2   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002aa4   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
002aa6   f005
002aa8   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
002aaa   f004
002aac   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
002aae   f003
002ab0   ecae     call	0x3b5c, 0           	CALL	_serial_printf
002ab2   f01d
002ab4   0e03     movlw	0x3                	MOVLW	0x03
002ab6   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           _00453_DS_:
                                           ;	.line	236; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	va_end(ap);
002ab8   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
002aba   f001
002abc   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
002abe   f000
002ac0   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
002ac2   ffd9
002ac4   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__serial_getstring	code
                                           _serial_getstring:
                                           ;	.line	159; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	u8 * serial_getstring()
00395c   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
00395e   ffe5
003960   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
003962   ffe5
003964   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
003966   ffe5
003968   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
00396a   ffe5
                                           ;	.line	166; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	do {
00396c   6a00     clrf	0, 0                	CLRF	r0x00
                                           _00432_DS_:
                                           ;	.line	167; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	c = serial_getkey();
00396e   ec82     call	0x3d04, 0           	CALL	_serial_getkey
003970   f01e
003972   6e01     movwf	0x1, 0             	MOVWF	r0x01
                                           ;	.line	168; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	serial_printf("%c", c);
003974   c001     movff	0x1, 0x2           	MOVFF	r0x01, r0x02
003976   f002
003978   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
00397a   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
00397c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00397e   0e00     movlw	0                  	MOVLW	UPPER(__str_2)
003980   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003982   0e3c     movlw	0x3c               	MOVLW	HIGH(__str_2)
003984   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003986   0e3e     movlw	0x3e               	MOVLW	LOW(__str_2)
003988   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00398a   ecae     call	0x3b5c, 0           	CALL	_serial_printf
00398c   f01d
00398e   0e05     movlw	0x5                	MOVLW	0x05
003990   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	169; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	buffer[i++] = c;
003992   c000     movff	0, 0x2             	MOVFF	r0x00, r0x02
003994   f002
003996   2a00     incf	0, 0x1, 0           	INCF	r0x00, F
003998   6a03     clrf	0x3, 0              	CLRF	r0x03
00399a   0e80     movlw	0x80               	MOVLW	LOW(_serial_getstring_buffer_1_1)
00399c   2602     addwf	0x2, 0x1, 0        	ADDWF	r0x02, F
00399e   0e02     movlw	0x2                	MOVLW	HIGH(_serial_getstring_buffer_1_1)
0039a0   2203     addwfc	0x3, 0x1, 0       	ADDWFC	r0x03, F
0039a2   c002     movff	0x2, 0xfe9         	MOVFF	r0x02, FSR0L
0039a4   ffe9
0039a6   c003     movff	0x3, 0xfea         	MOVFF	r0x03, FSR0H
0039a8   ffea
0039aa   c001     movff	0x1, 0xfef         	MOVFF	r0x01, INDF0
0039ac   ffef
                                           ;	.line	170; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	} while (c != '\r');
0039ae   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
0039b0   0a0d     xorlw	0xd                	XORLW	0x0d
0039b2   e1dd     bnz	0x396e               	BNZ	_00432_DS_
                                           ;	.line	171; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	buffer[i] = '\0';
0039b4   6a01     clrf	0x1, 0              	CLRF	r0x01
0039b6   0e80     movlw	0x80               	MOVLW	LOW(_serial_getstring_buffer_1_1)
0039b8   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
0039ba   0e02     movlw	0x2                	MOVLW	HIGH(_serial_getstring_buffer_1_1)
0039bc   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
0039be   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
0039c0   ffe9
0039c2   c001     movff	0x1, 0xfea         	MOVFF	r0x01, FSR0H
0039c4   ffea
0039c6   6aef     clrf	0xef, 0             	CLRF	INDF0
                                           ;	.line	172; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	return (buffer);
0039c8   6e01     movwf	0x1, 0             	MOVWF	r0x01
0039ca   0e80     movlw	0x80               	MOVLW	0x80
0039cc   6e02     movwf	0x2, 0             	MOVWF	r0x02
0039ce   c002     movff	0x2, 0xff4         	MOVFF	r0x02, PRODH
0039d0   fff4
0039d2   c001     movff	0x1, 0xff3         	MOVFF	r0x01, PRODL
0039d4   fff3
0039d6   0e80     movlw	0x80               	MOVLW	LOW(_serial_getstring_buffer_1_1)
0039d8   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
0039da   f003
0039dc   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
0039de   f002
0039e0   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
0039e2   f001
0039e4   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0039e6   f000
0039e8   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__serial_getkey	code
                                           _serial_getkey:
                                           ;	.line	145; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	u8 serial_getkey()
003d04   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003d06   ffe5
                                           _00424_DS_:
                                           ;	.line	148; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	while (!(serial_available()));
003d08   ec5d     call	0x3cba, 0           	CALL	_serial_available
003d0a   f01e
003d0c   6e00     movwf	0, 0               	MOVWF	r0x00
003d0e   5000     movf	0, 0, 0             	MOVF	r0x00, W
003d10   e0fb     bz	0x3d08                	BZ	_00424_DS_
                                           ;	.line	149; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	c = serial_read();
003d12   ece0     call	0x3bc0, 0           	CALL	_serial_read
003d14   f01d
003d16   6e00     movwf	0, 0               	MOVWF	r0x00
                                           ;	.line	150; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	serial_flush();
003d18   ecbe     call	0x3d7c, 0           	CALL	_serial_flush
003d1a   f01e
                                           ;	.line	151; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	return (c);
003d1c   5000     movf	0, 0, 0             	MOVF	r0x00, W
003d1e   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003d20   f000
003d22   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__serial_printf	code
                                           _serial_printf:
                                           ;	.line	131; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	void serial_printf(char *fmt, ...)
003b5c   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
003b5e   ffe5
003b60   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
003b62   ffd9
003b64   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003b66   ffe5
003b68   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
003b6a   ffe5
                                           ;	.line	135; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	va_start(args, fmt);
003b6c   0e02     movlw	0x2                	MOVLW	0x02
003b6e   24d9     addwf	0xd9, 0, 0         	ADDWF	FSR2L, W
003b70   6e00     movwf	0, 0               	MOVWF	r0x00
003b72   0e00     movlw	0                  	MOVLW	0x00
003b74   20da     addwfc	0xda, 0, 0        	ADDWFC	FSR2H, W
003b76   6e01     movwf	0x1, 0             	MOVWF	r0x01
003b78   0e03     movlw	0x3                	MOVLW	0x03
003b7a   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
003b7c   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
003b7e   2a01     incf	0x1, 0x1, 0         	INCF	r0x01, F
                                           ; #	MOVF	r0x01, W
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
                                           ; #	MOVF	r0x00, W
                                           ; #	MOVF	r0x00, W
                                           ; #	MOVWF	r0x00
003b80   0e80     movlw	0x80               	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
                                           ;	.line	136; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	pprintf(serial_putchar, fmt, args);
003b82   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003b84   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
003b86   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003b88   5000     movf	0, 0, 0             	MOVF	r0x00, W
003b8a   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003b8c   0e04     movlw	0x4                	MOVLW	0x04
003b8e   cfdb     movff	0xfdb, 0xfe5       	MOVFF	PLUSW2, POSTDEC1
003b90   ffe5
003b92   0e03     movlw	0x3                	MOVLW	0x03
003b94   cfdb     movff	0xfdb, 0xfe5       	MOVFF	PLUSW2, POSTDEC1
003b96   ffe5
003b98   0e02     movlw	0x2                	MOVLW	0x02
003b9a   cfdb     movff	0xfdb, 0xfe5       	MOVFF	PLUSW2, POSTDEC1
003b9c   ffe5
003b9e   0e00     movlw	0                  	MOVLW	UPPER(_serial_putchar)
003ba0   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003ba2   0e3c     movlw	0x3c               	MOVLW	HIGH(_serial_putchar)
003ba4   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003ba6   0ee0     movlw	0xe0               	MOVLW	LOW(_serial_putchar)
003ba8   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003baa   ec0e     call	0x381c, 0           	CALL	_pprintf
003bac   f01c
003bae   0e09     movlw	0x9                	MOVLW	0x09
003bb0   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	137; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	va_end(args);
003bb2   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003bb4   f001
003bb6   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003bb8   f000
003bba   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
003bbc   ffd9
003bbe   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__serial_flush	code
                                           _serial_flush:
                                           ; #	MOVLW	0x01
                                           ; #	MOVWF	_wpointer, B
                                           ; #	MOVLW	0x01
                                           ;	.line	121; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	wpointer=1;
003d7c   0e01     movlw	0x1                	MOVLW	0x01
003d7e   0102     movlb	0x2                	BANKSEL	_wpointer
                                           ;	.line	122; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	rpointer=1;
003d80   6fe5     movwf	0xe5, 0x1          	MOVWF	_wpointer, B
003d82   0102     movlb	0x2                	BANKSEL	_rpointer
003d84   6fe6     movwf	0xe6, 0x1          	MOVWF	_rpointer, B
003d86   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__serial_read	code
                                           _serial_read:
                                           ;	.line	105; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	unsigned char serial_read()
003bc0   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003bc2   ffe5
003bc4   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
003bc6   ffe5
003bc8   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
003bca   ffe5
                                           ;	.line	107; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	unsigned char caractere=0;
003bcc   6a00     clrf	0, 0                	CLRF	r0x00
                                           ;	.line	109; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	if (serial_available())
003bce   ec5d     call	0x3cba, 0           	CALL	_serial_available
003bd0   f01e
003bd2   6e01     movwf	0x1, 0             	MOVWF	r0x01
003bd4   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
003bd6   e015     bz	0x3c02                	BZ	_00403_DS_
                                           ;	.line	111; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	caractere=rx[rpointer++];
003bd8   c2e6     movff	0x2e6, 0x1         	MOVFF	_rpointer, r0x01
003bda   f001
003bdc   0102     movlb	0x2                	BANKSEL	_rpointer
003bde   2be6     incf	0xe6, 0x1, 0x1      	INCF	_rpointer, F, B
003be0   6a02     clrf	0x2, 0              	CLRF	r0x02
003be2   0e00     movlw	0                  	MOVLW	LOW(_rx)
003be4   2601     addwf	0x1, 0x1, 0        	ADDWF	r0x01, F
003be6   0e02     movlw	0x2                	MOVLW	HIGH(_rx)
003be8   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
003bea   c001     movff	0x1, 0xfe9         	MOVFF	r0x01, FSR0L
003bec   ffe9
003bee   c002     movff	0x2, 0xfea         	MOVFF	r0x02, FSR0H
003bf0   ffea
003bf2   cfef     movff	0xfef, 0           	MOVFF	INDF0, r0x00
003bf4   f000
                                           ; removed redundant BANKSEL
                                           ;	.line	112; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	if (rpointer==RXBUFFERLENGTH)
003bf6   51e6     movf	0xe6, 0, 0x1        	MOVF	_rpointer, W, B
003bf8   0a80     xorlw	0x80               	XORLW	0x80
003bfa   e103     bnz	0x3c02               	BNZ	_00403_DS_
                                           ;	.line	113; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	rpointer=1;
003bfc   0e01     movlw	0x1                	MOVLW	0x01
003bfe   0102     movlb	0x2                	BANKSEL	_rpointer
003c00   6fe6     movwf	0xe6, 0x1          	MOVWF	_rpointer, B
                                           _00403_DS_:
                                           ;	.line	115; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	return(caractere);
003c02   5000     movf	0, 0, 0             	MOVF	r0x00, W
003c04   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
003c06   f002
003c08   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003c0a   f001
003c0c   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003c0e   f000
003c10   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__serial_interrupt	code
                                           _serial_interrupt:
                                           ;	.line	85; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	void serial_interrupt(void)
003af4   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003af6   ffe5
003af8   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
003afa   ffe5
003afc   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
003afe   ffe5
                                           ;	.line	90; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	PIR1bits.RCIF=0;				// clear RX interrupt flag
003b00   9a9e     bcf	0x9e, 0x5, 0         	BCF	_PIR1bits, 5
                                           ;	.line	91; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	caractere=RCREG;				// take received char
003b02   cfae     movff	0xfae, 0           	MOVFF	_RCREG, r0x00
003b04   f000
003b06   0102     movlb	0x2                	BANKSEL	_wpointer
                                           ;	.line	92; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	if (wpointer!=RXBUFFERLENGTH-1)	// if not last place in buffer
003b08   51e5     movf	0xe5, 0, 0x1        	MOVF	_wpointer, W, B
003b0a   0a7f     xorlw	0x7f               	XORLW	0x7f
003b0c   e004     bz	0x3b16                	BZ	_00379_DS_
                                           _00391_DS_:
003b0e   0102     movlb	0x2                	BANKSEL	_wpointer
                                           ;	.line	93; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	newwp=wpointer+1;			// place=place+1
003b10   29e5     incf	0xe5, 0, 0x1        	INCF	_wpointer, W, B
003b12   6e01     movwf	0x1, 0             	MOVWF	r0x01
003b14   d002     bra	0x3b1a               	BRA	_00380_DS_
                                           _00379_DS_:
                                           ;	.line	95; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	newwp=1;					// else place=1
003b16   0e01     movlw	0x1                	MOVLW	0x01
003b18   6e01     movwf	0x1, 0             	MOVWF	r0x01
                                           _00380_DS_:
003b1a   0102     movlb	0x2                	BANKSEL	_rpointer
                                           ;	.line	97; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	if (rpointer!=newwp)			// if read pointer!=write pointer
003b1c   51e6     movf	0xe6, 0, 0x1        	MOVF	_rpointer, W, B
003b1e   1801     xorwf	0x1, 0, 0          	XORWF	r0x01, W
003b20   e00f     bz	0x3b40                	BZ	_00382_DS_
                                           ;	.line	98; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	rx[wpointer++]=caractere;	// store received char
003b22   c2e5     movff	0x2e5, 0x1         	MOVFF	_wpointer, r0x01
003b24   f001
003b26   0102     movlb	0x2                	BANKSEL	_wpointer
003b28   2be5     incf	0xe5, 0x1, 0x1      	INCF	_wpointer, F, B
003b2a   6a02     clrf	0x2, 0              	CLRF	r0x02
003b2c   0e00     movlw	0                  	MOVLW	LOW(_rx)
003b2e   2601     addwf	0x1, 0x1, 0        	ADDWF	r0x01, F
003b30   0e02     movlw	0x2                	MOVLW	HIGH(_rx)
003b32   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
003b34   c001     movff	0x1, 0xfe9         	MOVFF	r0x01, FSR0L
003b36   ffe9
003b38   c002     movff	0x2, 0xfea         	MOVFF	r0x02, FSR0H
003b3a   ffea
003b3c   c000     movff	0, 0xfef           	MOVFF	r0x00, INDF0
003b3e   ffef
                                           _00382_DS_:
003b40   0102     movlb	0x2                	BANKSEL	_wpointer
                                           ;	.line	100; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	if (wpointer==RXBUFFERLENGTH)	// if write pointer=length buffer
003b42   51e5     movf	0xe5, 0, 0x1        	MOVF	_wpointer, W, B
003b44   0a80     xorlw	0x80               	XORLW	0x80
003b46   e103     bnz	0x3b4e               	BNZ	_00385_DS_
                                           ;	.line	101; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	wpointer=1;					// write pointer = 1
003b48   0e01     movlw	0x1                	MOVLW	0x01
003b4a   0102     movlb	0x2                	BANKSEL	_wpointer
003b4c   6fe5     movwf	0xe5, 0x1          	MOVWF	_wpointer, B
                                           _00385_DS_:
003b4e   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
003b50   f002
003b52   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003b54   f001
003b56   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003b58   f000
003b5a   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__serial_putchar	code
                                           _serial_putchar:
                                           ;	.line	78; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	void serial_putchar(unsigned char caractere)
003ce0   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
003ce2   ffe5
003ce4   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
003ce6   ffd9
003ce8   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003cea   ffe5
003cec   0e02     movlw	0x2                	MOVLW	0x02
003cee   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
003cf0   f000
                                           _00370_DS_:
                                           ;	.line	80; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	while (!TXSTAbits.TRMT);
003cf2   a2ac     btfss	0xac, 0x1, 0       	BTFSS	_TXSTAbits, 1
003cf4   d7fe     bra	0x3cf2               	BRA	_00370_DS_
                                           ;	.line	81; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	TXREG=caractere;		        // yes, send char
003cf6   c000     movff	0, 0xfad           	MOVFF	r0x00, _TXREG
003cf8   ffad
003cfa   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003cfc   f000
003cfe   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
003d00   ffd9
003d02   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__serial_available	code
                                           _serial_available:
                                           ;	.line	72; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	unsigned char serial_available()
003cba   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003cbc   ffe5
                                           ;	.line	74; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	return(wpointer!=rpointer);
003cbe   6a00     clrf	0, 0                	CLRF	r0x00
003cc0   0102     movlb	0x2                	BANKSEL	_wpointer
003cc2   51e5     movf	0xe5, 0, 0x1        	MOVF	_wpointer, W, B
003cc4   0102     movlb	0x2                	BANKSEL	_rpointer
003cc6   19e6     xorwf	0xe6, 0, 0x1       	XORWF	_rpointer, W, B
003cc8   e101     bnz	0x3ccc               	BNZ	_00365_DS_
003cca   2a00     incf	0, 0x1, 0           	INCF	r0x00, F
                                           _00365_DS_:
003ccc   5000     movf	0, 0, 0             	MOVF	r0x00, W
003cce   80d8     bsf	0xd8, 0, 0           	BSF	STATUS, 0
003cd0   66e8     tstfsz	0xe8, 0           	TSTFSZ	WREG
003cd2   90d8     bcf	0xd8, 0, 0           	BCF	STATUS, 0
003cd4   6a00     clrf	0, 0                	CLRF	r0x00
003cd6   3600     rlcf	0, 0x1, 0           	RLCF	r0x00, F
003cd8   5000     movf	0, 0, 0             	MOVF	r0x00, W
003cda   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003cdc   f000
003cde   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__serial_begin	code
                                           _serial_begin:
                                           ;	.line	48; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	void serial_begin(unsigned long baudrate)
003532   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
003534   ffe5
003536   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
003538   ffd9
00353a   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
00353c   ffe5
00353e   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
003540   ffe5
003542   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
003544   ffe5
003546   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
003548   ffe5
00354a   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
00354c   ffe5
00354e   0e02     movlw	0x2                	MOVLW	0x02
003550   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
003552   f000
003554   0e03     movlw	0x3                	MOVLW	0x03
003556   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
003558   f001
00355a   0e04     movlw	0x4                	MOVLW	0x04
00355c   cfdb     movff	0xfdb, 0x2         	MOVFF	PLUSW2, r0x02
00355e   f002
003560   0e05     movlw	0x5                	MOVLW	0x05
003562   cfdb     movff	0xfdb, 0x3         	MOVFF	PLUSW2, r0x03
003564   f003
                                           ;	.line	53; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	spbrg=(48000000/(4*baudrate))-1;
003566   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
003568   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00356a   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
00356c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00356e   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
003570   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003572   5000     movf	0, 0, 0             	MOVF	r0x00, W
003574   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003576   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003578   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
00357a   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
00357c   0e04     movlw	0x4                	MOVLW	0x04
00357e   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003580   ec25     call	0x4a, 0             	CALL	__mullong
003582   f000
003584   6e00     movwf	0, 0               	MOVWF	r0x00
003586   cff3     movff	0xff3, 0x1         	MOVFF	PRODL, r0x01
003588   f001
00358a   cff4     movff	0xff4, 0x2         	MOVFF	PRODH, r0x02
00358c   f002
00358e   cfe9     movff	0xfe9, 0x3         	MOVFF	FSR0L, r0x03
003590   f003
003592   0e08     movlw	0x8                	MOVLW	0x08
003594   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
003596   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
003598   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00359a   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
00359c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00359e   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
0035a0   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0035a2   5000     movf	0, 0, 0             	MOVF	r0x00, W
0035a4   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0035a6   0e02     movlw	0x2                	MOVLW	0x02
0035a8   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0035aa   0edc     movlw	0xdc               	MOVLW	0xdc
0035ac   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0035ae   0e6c     movlw	0x6c               	MOVLW	0x6c
0035b0   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0035b2   0e00     movlw	0                  	MOVLW	0x00
0035b4   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
0035b6   ec9a     call	0x3334, 0           	CALL	__divulong
0035b8   f019
0035ba   6e00     movwf	0, 0               	MOVWF	r0x00
0035bc   cff3     movff	0xff3, 0x1         	MOVFF	PRODL, r0x01
0035be   f001
0035c0   0e08     movlw	0x8                	MOVLW	0x08
0035c2   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
0035c4   0eff     movlw	0xff               	MOVLW	0xff
0035c6   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
0035c8   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
                                           ;	.line	54; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	highbyte=spbrg/256;
0035ca   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
                                           ;	.line	55; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	lowbyte=spbrg%256;
0035cc   6e04     movwf	0x4, 0             	MOVWF	r0x04
                                           ;	.line	56; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	TXSTAbits.BRGH=1;               	  	// set BRGH bit
0035ce   84ac     bsf	0xac, 0x2, 0         	BSF	_TXSTAbits, 2
                                           ;	.line	57; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	BAUDCONbits.BRG16=1;					// set 16 bits SPBRG
0035d0   86b8     bsf	0xb8, 0x3, 0         	BSF	_BAUDCONbits, 3
                                           ;	.line	58; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	SPBRGH=highbyte;                        // set UART speed SPBRGH
0035d2   c004     movff	0x4, 0xfb0         	MOVFF	r0x04, _SPBRGH
0035d4   ffb0
                                           ;	.line	59; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	SPBRG=lowbyte;   						// set UART speed SPBRGL
0035d6   c000     movff	0, 0xfaf           	MOVFF	r0x00, _SPBRG
0035d8   ffaf
                                           ;	.line	60; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	RCSTA=0x90;                             // set RCEN and SPEN
0035da   0e90     movlw	0x90               	MOVLW	0x90
0035dc   6eab     movwf	0xab, 0            	MOVWF	_RCSTA
                                           ;	.line	61; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	BAUDCONbits.RCIDL=1;			// set receive active
0035de   8cb8     bsf	0xb8, 0x6, 0         	BSF	_BAUDCONbits, 6
                                           ;	.line	62; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	PIE1bits.RCIE=1;                        // enable interrupt on RX
0035e0   8a9d     bsf	0x9d, 0x5, 0         	BSF	_PIE1bits, 5
                                           ;	.line	63; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	INTCONbits.PEIE=1;                      // enable peripheral interrupts
0035e2   8cf2     bsf	0xf2, 0x6, 0         	BSF	_INTCONbits, 6
                                           ;	.line	64; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	IPR1bits.RCIP=1;                        // define high priority for RX interrupt
0035e4   8a9f     bsf	0x9f, 0x5, 0         	BSF	_IPR1bits, 5
                                           ; #	MOVLW	0x01
                                           ; #	MOVWF	_wpointer, B
                                           ; #	MOVLW	0x01
                                           ;	.line	65; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	wpointer=1;                             // initialize write pointer
0035e6   0e01     movlw	0x1                	MOVLW	0x01
0035e8   0102     movlb	0x2                	BANKSEL	_wpointer
                                           ;	.line	66; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	rpointer=1;                             // initialize read pointer
0035ea   6fe5     movwf	0xe5, 0x1          	MOVWF	_wpointer, B
0035ec   0102     movlb	0x2                	BANKSEL	_rpointer
0035ee   6fe6     movwf	0xe6, 0x1          	MOVWF	_rpointer, B
                                           ;	.line	67; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	TXSTAbits.TXEN=1;                       // enable TX
0035f0   8aac     bsf	0xac, 0x5, 0         	BSF	_TXSTAbits, 5
                                           ;	.line	68; /opt/pinguino/pinguino32/p8/include/pinguino/core/serial.c	INTCONbits.GIE=1;
0035f2   8ef2     bsf	0xf2, 0x7, 0         	BSF	_INTCONbits, 7
0035f4   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
0035f6   f004
0035f8   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
0035fa   f003
0035fc   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
0035fe   f002
003600   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003602   f001
003604   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003606   f000
003608   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
00360a   ffd9
00360c   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__psprintf	code
                                           _psprintf:
                                           ;	.line	248; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	int psprintf(char *out, const char *format, va_list args)
0036c6   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
0036c8   ffe5
0036ca   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
0036cc   ffd9
0036ce   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
0036d0   ffe5
0036d2   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
0036d4   ffe5
0036d6   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
0036d8   ffe5
0036da   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
0036dc   ffe5
0036de   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
0036e0   ffe5
0036e2   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
0036e4   ffe5
0036e6   0e02     movlw	0x2                	MOVLW	0x02
0036e8   cfdb     movff	0xfdb, 0x2df       	MOVFF	PLUSW2, _psprintf_out_1_1
0036ea   f2df
0036ec   0e03     movlw	0x3                	MOVLW	0x03
0036ee   cfdb     movff	0xfdb, 0x2e0       	MOVFF	PLUSW2, (_psprintf_out_1_1 + 1)
0036f0   f2e0
0036f2   0e04     movlw	0x4                	MOVLW	0x04
0036f4   cfdb     movff	0xfdb, 0x2e1       	MOVFF	PLUSW2, (_psprintf_out_1_1 + 2)
0036f6   f2e1
0036f8   0e05     movlw	0x5                	MOVLW	0x05
0036fa   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
0036fc   f000
0036fe   0e06     movlw	0x6                	MOVLW	0x06
003700   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
003702   f001
003704   0e07     movlw	0x7                	MOVLW	0x07
003706   cfdb     movff	0xfdb, 0x2         	MOVFF	PLUSW2, r0x02
003708   f002
00370a   0e08     movlw	0x8                	MOVLW	0x08
00370c   cfdb     movff	0xfdb, 0x3         	MOVFF	PLUSW2, r0x03
00370e   f003
003710   0e09     movlw	0x9                	MOVLW	0x09
003712   cfdb     movff	0xfdb, 0x4         	MOVFF	PLUSW2, r0x04
003714   f004
003716   0e0a     movlw	0xa                	MOVLW	0x0a
003718   cfdb     movff	0xfdb, 0x5         	MOVFF	PLUSW2, r0x05
00371a   f005
                                           ;	.line	253; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	return pprint(&out, format, args);
00371c   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
00371e   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003720   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
003722   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003724   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
003726   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003728   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
00372a   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00372c   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
00372e   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003730   5000     movf	0, 0, 0             	MOVF	r0x00, W
003732   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003734   0e80     movlw	0x80               	MOVLW	0x80
003736   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003738   0e02     movlw	0x2                	MOVLW	HIGH(_psprintf_out_1_1)
00373a   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00373c   0edf     movlw	0xdf               	MOVLW	LOW(_psprintf_out_1_1)
00373e   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003740   ec38     call	0x2070, 0           	CALL	_pprint
003742   f010
003744   6e00     movwf	0, 0               	MOVWF	r0x00
003746   cff3     movff	0xff3, 0x1         	MOVFF	PRODL, r0x01
003748   f001
00374a   0e09     movlw	0x9                	MOVLW	0x09
00374c   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
00374e   c001     movff	0x1, 0xff3         	MOVFF	r0x01, PRODL
003750   fff3
003752   5000     movf	0, 0, 0             	MOVF	r0x00, W
003754   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
003756   f005
003758   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
00375a   f004
00375c   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
00375e   f003
003760   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
003762   f002
003764   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003766   f001
003768   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
00376a   f000
00376c   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
00376e   ffd9
003770   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__pprintf	code
                                           _pprintf:
                                           ;	.line	238; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	int pprintf(stdout func, const char *format, va_list args)
00381c   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
00381e   ffe5
003820   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
003822   ffd9
003824   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003826   ffe5
003828   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
00382a   ffe5
00382c   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
00382e   ffe5
003830   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
003832   ffe5
003834   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
003836   ffe5
003838   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
00383a   ffe5
00383c   0e02     movlw	0x2                	MOVLW	0x02
00383e   cfdb     movff	0xfdb, 0x2dc       	MOVFF	PLUSW2, _pputchar
003840   f2dc
003842   0e03     movlw	0x3                	MOVLW	0x03
003844   cfdb     movff	0xfdb, 0x2dd       	MOVFF	PLUSW2, (_pputchar + 1)
003846   f2dd
003848   0e04     movlw	0x4                	MOVLW	0x04
00384a   cfdb     movff	0xfdb, 0x2de       	MOVFF	PLUSW2, (_pputchar + 2)
00384c   f2de
00384e   0e05     movlw	0x5                	MOVLW	0x05
003850   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
003852   f000
003854   0e06     movlw	0x6                	MOVLW	0x06
003856   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
003858   f001
00385a   0e07     movlw	0x7                	MOVLW	0x07
00385c   cfdb     movff	0xfdb, 0x2         	MOVFF	PLUSW2, r0x02
00385e   f002
003860   0e08     movlw	0x8                	MOVLW	0x08
003862   cfdb     movff	0xfdb, 0x3         	MOVFF	PLUSW2, r0x03
003864   f003
003866   0e09     movlw	0x9                	MOVLW	0x09
003868   cfdb     movff	0xfdb, 0x4         	MOVFF	PLUSW2, r0x04
00386a   f004
00386c   0e0a     movlw	0xa                	MOVLW	0x0a
00386e   cfdb     movff	0xfdb, 0x5         	MOVFF	PLUSW2, r0x05
003870   f005
                                           ;	.line	244; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	return pprint(0, format, args);
003872   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
003874   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003876   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
003878   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00387a   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
00387c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00387e   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
003880   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003882   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
003884   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003886   5000     movf	0, 0, 0             	MOVF	r0x00, W
003888   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00388a   0e00     movlw	0                  	MOVLW	0x00
00388c   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
00388e   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003890   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003892   ec38     call	0x2070, 0           	CALL	_pprint
003894   f010
003896   6e00     movwf	0, 0               	MOVWF	r0x00
003898   cff3     movff	0xff3, 0x1         	MOVFF	PRODL, r0x01
00389a   f001
00389c   0e09     movlw	0x9                	MOVLW	0x09
00389e   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
0038a0   c001     movff	0x1, 0xff3         	MOVFF	r0x01, PRODL
0038a2   fff3
0038a4   5000     movf	0, 0, 0             	MOVF	r0x00, W
0038a6   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
0038a8   f005
0038aa   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
0038ac   f004
0038ae   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
0038b0   f003
0038b2   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
0038b4   f002
0038b6   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
0038b8   f001
0038ba   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0038bc   f000
0038be   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
0038c0   ffd9
0038c2   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__pprint	code
                                           _pprint:
                                           ;	.line	141; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	static int pprint(char **out, const char *format, va_list args)
002070   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
002072   ffe5
002074   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
002076   ffd9
002078   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
00207a   ffe5
00207c   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
00207e   ffe5
002080   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
002082   ffe5
002084   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
002086   ffe5
002088   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
00208a   ffe5
00208c   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
00208e   ffe5
002090   c006     movff	0x6, 0xfe5         	MOVFF	r0x06, POSTDEC1
002092   ffe5
002094   c007     movff	0x7, 0xfe5         	MOVFF	r0x07, POSTDEC1
002096   ffe5
002098   c008     movff	0x8, 0xfe5         	MOVFF	r0x08, POSTDEC1
00209a   ffe5
00209c   c009     movff	0x9, 0xfe5         	MOVFF	r0x09, POSTDEC1
00209e   ffe5
0020a0   c00a     movff	0xa, 0xfe5         	MOVFF	r0x0a, POSTDEC1
0020a2   ffe5
0020a4   c00b     movff	0xb, 0xfe5         	MOVFF	r0x0b, POSTDEC1
0020a6   ffe5
0020a8   c00c     movff	0xc, 0xfe5         	MOVFF	r0x0c, POSTDEC1
0020aa   ffe5
0020ac   c00d     movff	0xd, 0xfe5         	MOVFF	r0x0d, POSTDEC1
0020ae   ffe5
0020b0   c00e     movff	0xe, 0xfe5         	MOVFF	r0x0e, POSTDEC1
0020b2   ffe5
0020b4   c00f     movff	0xf, 0xfe5         	MOVFF	r0x0f, POSTDEC1
0020b6   ffe5
0020b8   c010     movff	0x10, 0xfe5        	MOVFF	r0x10, POSTDEC1
0020ba   ffe5
0020bc   c011     movff	0x11, 0xfe5        	MOVFF	r0x11, POSTDEC1
0020be   ffe5
0020c0   c012     movff	0x12, 0xfe5        	MOVFF	r0x12, POSTDEC1
0020c2   ffe5
0020c4   c013     movff	0x13, 0xfe5        	MOVFF	r0x13, POSTDEC1
0020c6   ffe5
0020c8   0e02     movlw	0x2                	MOVLW	0x02
0020ca   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
0020cc   f000
0020ce   0e03     movlw	0x3                	MOVLW	0x03
0020d0   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
0020d2   f001
0020d4   0e04     movlw	0x4                	MOVLW	0x04
0020d6   cfdb     movff	0xfdb, 0x2         	MOVFF	PLUSW2, r0x02
0020d8   f002
0020da   0e05     movlw	0x5                	MOVLW	0x05
0020dc   cfdb     movff	0xfdb, 0x3         	MOVFF	PLUSW2, r0x03
0020de   f003
0020e0   0e06     movlw	0x6                	MOVLW	0x06
0020e2   cfdb     movff	0xfdb, 0x4         	MOVFF	PLUSW2, r0x04
0020e4   f004
0020e6   0e07     movlw	0x7                	MOVLW	0x07
0020e8   cfdb     movff	0xfdb, 0x5         	MOVFF	PLUSW2, r0x05
0020ea   f005
0020ec   0e08     movlw	0x8                	MOVLW	0x08
0020ee   cfdb     movff	0xfdb, 0x6         	MOVFF	PLUSW2, r0x06
0020f0   f006
0020f2   0e09     movlw	0x9                	MOVLW	0x09
0020f4   cfdb     movff	0xfdb, 0x7         	MOVFF	PLUSW2, r0x07
0020f6   f007
0020f8   0e0a     movlw	0xa                	MOVLW	0x0a
0020fa   cfdb     movff	0xfdb, 0x8         	MOVFF	PLUSW2, r0x08
0020fc   f008
                                           ;	.line	144; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	register int pc = 0;
0020fe   6a09     clrf	0x9, 0              	CLRF	r0x09
002100   6a0a     clrf	0xa, 0              	CLRF	r0x0a
                                           _00271_DS_:
                                           ;	.line	147; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	for (; *format != 0; ++format)
002102   c003     movff	0x3, 0xfe9         	MOVFF	r0x03, FSR0L
002104   ffe9
002106   c004     movff	0x4, 0xff3         	MOVFF	r0x04, PRODL
002108   fff3
00210a   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
00210c   ec29     call	0x52, 0             	CALL	__gptrget1
00210e   f000
002110   6e0b     movwf	0xb, 0             	MOVWF	r0x0b
002112   500b     movf	0xb, 0, 0           	MOVF	r0x0b, W
002114   b4d8     btfsc	0xd8, 0x2, 0       	BTFSC	STATUS, 2
002116   ef8e     goto	0x271c              	GOTO	_00274_DS_
002118   f013
                                           ;	.line	149; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	if (*format == '%')
00211a   500b     movf	0xb, 0, 0           	MOVF	r0x0b, W
00211c   0a25     xorlw	0x25               	XORLW	0x25
00211e   e002     bz	0x2124                	BZ	_00311_DS_
002120   ef72     goto	0x26e4              	GOTO	_00267_DS_
002122   f013
                                           _00311_DS_:
                                           ;	.line	151; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	++format;
002124   2a03     incf	0x3, 0x1, 0         	INCF	r0x03, F
002126   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
002128   2a04     incf	0x4, 0x1, 0         	INCF	r0x04, F
00212a   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
00212c   2a05     incf	0x5, 0x1, 0         	INCF	r0x05, F
                                           ;	.line	152; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	width = pad = 0;
00212e   6a0b     clrf	0xb, 0              	CLRF	r0x0b
002130   6a0c     clrf	0xc, 0              	CLRF	r0x0c
002132   6a0d     clrf	0xd, 0              	CLRF	r0x0d
002134   6a0e     clrf	0xe, 0              	CLRF	r0x0e
                                           ;	.line	153; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	if (*format == '\0')
002136   c003     movff	0x3, 0xfe9         	MOVFF	r0x03, FSR0L
002138   ffe9
00213a   c004     movff	0x4, 0xff3         	MOVFF	r0x04, PRODL
00213c   fff3
00213e   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
002140   ec29     call	0x52, 0             	CALL	__gptrget1
002142   f000
002144   6e0f     movwf	0xf, 0             	MOVWF	r0x0f
002146   500f     movf	0xf, 0, 0           	MOVF	r0x0f, W
002148   b4d8     btfsc	0xd8, 0x2, 0       	BTFSC	STATUS, 2
00214a   ef8e     goto	0x271c              	GOTO	_00274_DS_
00214c   f013
                                           ;	.line	155; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	if (*format == '%')
00214e   500f     movf	0xf, 0, 0           	MOVF	r0x0f, W
002150   0a25     xorlw	0x25               	XORLW	0x25
002152   e102     bnz	0x2158               	BNZ	_00313_DS_
002154   ef72     goto	0x26e4              	GOTO	_00267_DS_
002156   f013
                                           _00313_DS_:
                                           ;	.line	157; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	if (*format == '-')
002158   500f     movf	0xf, 0, 0           	MOVF	r0x0f, W
00215a   0a2d     xorlw	0x2d               	XORLW	0x2d
00215c   e108     bnz	0x216e               	BNZ	_00292_DS_
                                           ;	.line	159; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	++format;
00215e   2a03     incf	0x3, 0x1, 0         	INCF	r0x03, F
002160   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
002162   2a04     incf	0x4, 0x1, 0         	INCF	r0x04, F
002164   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
002166   2a05     incf	0x5, 0x1, 0         	INCF	r0x05, F
                                           ;	.line	160; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	pad = PAD_RIGHT;
002168   0e01     movlw	0x1                	MOVLW	0x01
00216a   6e0b     movwf	0xb, 0             	MOVWF	r0x0b
00216c   6a0c     clrf	0xc, 0              	CLRF	r0x0c
                                           _00292_DS_:
                                           ;	.line	162; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	while (*format == '0')
00216e   c003     movff	0x3, 0xf           	MOVFF	r0x03, r0x0f
002170   f00f
002172   c004     movff	0x4, 0x10          	MOVFF	r0x04, r0x10
002174   f010
002176   c005     movff	0x5, 0x11          	MOVFF	r0x05, r0x11
002178   f011
                                           _00244_DS_:
00217a   c00f     movff	0xf, 0xfe9         	MOVFF	r0x0f, FSR0L
00217c   ffe9
00217e   c010     movff	0x10, 0xff3        	MOVFF	r0x10, PRODL
002180   fff3
002182   5011     movf	0x11, 0, 0          	MOVF	r0x11, W
002184   ec29     call	0x52, 0             	CALL	__gptrget1
002186   f000
                                           ; #	MOVWF	r0x12
                                           ; #	MOVF	r0x12, W
002188   0a30     xorlw	0x30               	XORLW	0x30
00218a   e107     bnz	0x219a               	BNZ	_00278_DS_
                                           ;	.line	164; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	++format;
00218c   2a0f     incf	0xf, 0x1, 0         	INCF	r0x0f, F
00218e   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
002190   2a10     incf	0x10, 0x1, 0        	INCF	r0x10, F
002192   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
002194   2a11     incf	0x11, 0x1, 0        	INCF	r0x11, F
                                           ;	.line	165; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	pad |= PAD_ZERO;
002196   820b     bsf	0xb, 0x1, 0          	BSF	r0x0b, 1
002198   d7f0     bra	0x217a               	BRA	_00244_DS_
                                           _00278_DS_:
                                           ;	.line	167; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	for ( ; *format >= '0' && *format <= '9'; ++format)
00219a   c00f     movff	0xf, 0xfe9         	MOVFF	r0x0f, FSR0L
00219c   ffe9
00219e   c010     movff	0x10, 0xff3        	MOVFF	r0x10, PRODL
0021a0   fff3
0021a2   5011     movf	0x11, 0, 0          	MOVF	r0x11, W
0021a4   ec29     call	0x52, 0             	CALL	__gptrget1
0021a6   f000
                                           ; #	MOVWF	r0x12
                                           ; #	MOVF	r0x12, W
0021a8   6e12     movwf	0x12, 0            	MOVWF	r0x12
0021aa   0f80     addlw	0x80               	ADDLW	0x80
0021ac   0f50     addlw	0x50               	ADDLW	0x50
0021ae   e323     bnc	0x21f6               	BNC	_00309_DS_
0021b0   5012     movf	0x12, 0, 0          	MOVF	r0x12, W
0021b2   0f80     addlw	0x80               	ADDLW	0x80
0021b4   0f46     addlw	0x46               	ADDLW	0x46
0021b6   e21f     bc	0x21f6                	BC	_00309_DS_
                                           ;	.line	169; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	width *= 10;
0021b8   500e     movf	0xe, 0, 0           	MOVF	r0x0e, W
0021ba   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0021bc   500d     movf	0xd, 0, 0           	MOVF	r0x0d, W
0021be   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0021c0   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
0021c2   0e0a     movlw	0xa                	MOVLW	0x0a
0021c4   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0021c6   ec27     call	0x4e, 0             	CALL	__mulint
0021c8   f000
0021ca   6e0d     movwf	0xd, 0             	MOVWF	r0x0d
0021cc   cff3     movff	0xff3, 0xe         	MOVFF	PRODL, r0x0e
0021ce   f00e
0021d0   0e04     movlw	0x4                	MOVLW	0x04
0021d2   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	170; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	width += *format - '0';
0021d4   6a13     clrf	0x13, 0             	CLRF	r0x13
0021d6   be12     btfsc	0x12, 0x7, 0       	BTFSC	r0x12, 7
0021d8   6813     setf	0x13, 0             	SETF	r0x13
0021da   0ed0     movlw	0xd0               	MOVLW	0xd0
0021dc   2612     addwf	0x12, 0x1, 0       	ADDWF	r0x12, F
0021de   a0d8     btfss	0xd8, 0, 0         	BTFSS	STATUS, 0
0021e0   0613     decf	0x13, 0x1, 0        	DECF	r0x13, F
0021e2   5012     movf	0x12, 0, 0          	MOVF	r0x12, W
0021e4   260d     addwf	0xd, 0x1, 0        	ADDWF	r0x0d, F
0021e6   5013     movf	0x13, 0, 0          	MOVF	r0x13, W
0021e8   220e     addwfc	0xe, 0x1, 0       	ADDWFC	r0x0e, F
                                           ;	.line	167; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	for ( ; *format >= '0' && *format <= '9'; ++format)
0021ea   2a0f     incf	0xf, 0x1, 0         	INCF	r0x0f, F
0021ec   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
0021ee   2a10     incf	0x10, 0x1, 0        	INCF	r0x10, F
0021f0   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
0021f2   2a11     incf	0x11, 0x1, 0        	INCF	r0x11, F
0021f4   d7d2     bra	0x219a               	BRA	_00278_DS_
                                           _00309_DS_:
0021f6   c00f     movff	0xf, 0x3           	MOVFF	r0x0f, r0x03
0021f8   f003
0021fa   c010     movff	0x10, 0x4          	MOVFF	r0x10, r0x04
0021fc   f004
0021fe   c011     movff	0x11, 0x5          	MOVFF	r0x11, r0x05
002200   f005
                                           ;	.line	172; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	if (*format == 's')
002202   c00f     movff	0xf, 0xfe9         	MOVFF	r0x0f, FSR0L
002204   ffe9
002206   c010     movff	0x10, 0xff3        	MOVFF	r0x10, PRODL
002208   fff3
00220a   5011     movf	0x11, 0, 0          	MOVF	r0x11, W
00220c   ec29     call	0x52, 0             	CALL	__gptrget1
00220e   f000
                                           ; #	MOVWF	r0x0f
                                           ; #	MOVF	r0x0f, W
002210   6e0f     movwf	0xf, 0             	MOVWF	r0x0f
002212   0a73     xorlw	0x73               	XORLW	0x73
002214   e001     bz	0x2218                	BZ	_00322_DS_
002216   d04a     bra	0x22ac               	BRA	_00248_DS_
                                           _00322_DS_:
                                           ;	.line	175; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	char *s = va_arg(args, char*);
002218   5006     movf	0x6, 0, 0           	MOVF	r0x06, W
00221a   0f03     addlw	0x3                	ADDLW	0x03
00221c   6e10     movwf	0x10, 0            	MOVWF	r0x10
00221e   0e00     movlw	0                  	MOVLW	0x00
002220   2007     addwfc	0x7, 0, 0         	ADDWFC	r0x07, W
002222   6e11     movwf	0x11, 0            	MOVWF	r0x11
002224   0e00     movlw	0                  	MOVLW	0x00
002226   2008     addwfc	0x8, 0, 0         	ADDWFC	r0x08, W
002228   6e12     movwf	0x12, 0            	MOVWF	r0x12
00222a   c010     movff	0x10, 0x6          	MOVFF	r0x10, r0x06
00222c   f006
00222e   c011     movff	0x11, 0x7          	MOVFF	r0x11, r0x07
002230   f007
002232   c012     movff	0x12, 0x8          	MOVFF	r0x12, r0x08
002234   f008
002236   0efd     movlw	0xfd               	MOVLW	0xfd
002238   2610     addwf	0x10, 0x1, 0       	ADDWF	r0x10, F
00223a   0eff     movlw	0xff               	MOVLW	0xff
00223c   2211     addwfc	0x11, 0x1, 0      	ADDWFC	r0x11, F
00223e   2212     addwfc	0x12, 0x1, 0      	ADDWFC	r0x12, F
002240   c010     movff	0x10, 0xfe9        	MOVFF	r0x10, FSR0L
002242   ffe9
002244   c011     movff	0x11, 0xff3        	MOVFF	r0x11, PRODL
002246   fff3
002248   5012     movf	0x12, 0, 0          	MOVF	r0x12, W
00224a   ec2d     call	0x5a, 0             	CALL	__gptrget3
00224c   f000
00224e   6e10     movwf	0x10, 0            	MOVWF	r0x10
002250   cff3     movff	0xff3, 0x11        	MOVFF	PRODL, r0x11
002252   f011
002254   cff4     movff	0xff4, 0x12        	MOVFF	PRODH, r0x12
002256   f012
                                           ;	.line	177; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	pc += pprints(out, s?s:"(null)", width, pad);
002258   1011     iorwf	0x11, 0, 0         	IORWF	r0x11, W
                                           ; #	IORWF	r0x12, W
                                           ; #	BTFSC	STATUS, 2
                                           ; #	GOTO	_00284_DS_
                                           ; #	GOTO	_00285_DS_
                                           ; #	MOVLW	LOW(__str_0)
00225a   1012     iorwf	0x12, 0, 0         	IORWF	r0x12, W
00225c   e106     bnz	0x226a               	BNZ	_00285_DS_
00225e   0e20     movlw	0x20               	MOVLW	LOW(__str_0)
002260   6e10     movwf	0x10, 0            	MOVWF	r0x10
002262   0e3c     movlw	0x3c               	MOVLW	HIGH(__str_0)
002264   6e11     movwf	0x11, 0            	MOVWF	r0x11
002266   0e00     movlw	0                  	MOVLW	UPPER(__str_0)
002268   6e12     movwf	0x12, 0            	MOVWF	r0x12
                                           _00285_DS_:
00226a   500c     movf	0xc, 0, 0           	MOVF	r0x0c, W
00226c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00226e   500b     movf	0xb, 0, 0           	MOVF	r0x0b, W
002270   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002272   500e     movf	0xe, 0, 0           	MOVF	r0x0e, W
002274   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002276   500d     movf	0xd, 0, 0           	MOVF	r0x0d, W
002278   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00227a   5012     movf	0x12, 0, 0          	MOVF	r0x12, W
00227c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00227e   5011     movf	0x11, 0, 0          	MOVF	r0x11, W
002280   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002282   5010     movf	0x10, 0, 0          	MOVF	r0x10, W
002284   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002286   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002288   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00228a   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
00228c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00228e   5000     movf	0, 0, 0             	MOVF	r0x00, W
002290   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002292   ec7a     call	0x30f4, 0           	CALL	_pprints
002294   f018
002296   6e10     movwf	0x10, 0            	MOVWF	r0x10
002298   cff3     movff	0xff3, 0x11        	MOVFF	PRODL, r0x11
00229a   f011
00229c   0e0a     movlw	0xa                	MOVLW	0x0a
00229e   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
0022a0   5010     movf	0x10, 0, 0          	MOVF	r0x10, W
0022a2   2609     addwf	0x9, 0x1, 0        	ADDWF	r0x09, F
0022a4   5011     movf	0x11, 0, 0          	MOVF	r0x11, W
0022a6   220a     addwfc	0xa, 0x1, 0       	ADDWFC	r0x0a, F
                                           ;	.line	178; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	continue;
0022a8   ef87     goto	0x270e              	GOTO	_00273_DS_
0022aa   f013
                                           _00248_DS_:
                                           ;	.line	180; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	if (*format == 'd')
0022ac   500f     movf	0xf, 0, 0           	MOVF	r0x0f, W
0022ae   0a64     xorlw	0x64               	XORLW	0x64
0022b0   e001     bz	0x22b4                	BZ	_00324_DS_
0022b2   d045     bra	0x233e               	BRA	_00250_DS_
                                           _00324_DS_:
                                           ;	.line	182; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	pc += pprinti(out, va_arg(args, int), 10, 1, width, pad, 'a');
0022b4   5006     movf	0x6, 0, 0           	MOVF	r0x06, W
0022b6   0f02     addlw	0x2                	ADDLW	0x02
0022b8   6e10     movwf	0x10, 0            	MOVWF	r0x10
0022ba   0e00     movlw	0                  	MOVLW	0x00
0022bc   2007     addwfc	0x7, 0, 0         	ADDWFC	r0x07, W
0022be   6e11     movwf	0x11, 0            	MOVWF	r0x11
0022c0   0e00     movlw	0                  	MOVLW	0x00
0022c2   2008     addwfc	0x8, 0, 0         	ADDWFC	r0x08, W
0022c4   6e12     movwf	0x12, 0            	MOVWF	r0x12
0022c6   c010     movff	0x10, 0x6          	MOVFF	r0x10, r0x06
0022c8   f006
0022ca   c011     movff	0x11, 0x7          	MOVFF	r0x11, r0x07
0022cc   f007
0022ce   c012     movff	0x12, 0x8          	MOVFF	r0x12, r0x08
0022d0   f008
0022d2   0efe     movlw	0xfe               	MOVLW	0xfe
0022d4   2610     addwf	0x10, 0x1, 0       	ADDWF	r0x10, F
0022d6   0eff     movlw	0xff               	MOVLW	0xff
0022d8   2211     addwfc	0x11, 0x1, 0      	ADDWFC	r0x11, F
0022da   2212     addwfc	0x12, 0x1, 0      	ADDWFC	r0x12, F
0022dc   c010     movff	0x10, 0xfe9        	MOVFF	r0x10, FSR0L
0022de   ffe9
0022e0   c011     movff	0x11, 0xff3        	MOVFF	r0x11, PRODL
0022e2   fff3
0022e4   5012     movf	0x12, 0, 0          	MOVF	r0x12, W
0022e6   ec2b     call	0x56, 0             	CALL	__gptrget2
0022e8   f000
0022ea   6e10     movwf	0x10, 0            	MOVWF	r0x10
0022ec   cff3     movff	0xff3, 0x11        	MOVFF	PRODL, r0x11
0022ee   f011
0022f0   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
0022f2   0e61     movlw	0x61               	MOVLW	0x61
0022f4   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0022f6   500c     movf	0xc, 0, 0           	MOVF	r0x0c, W
0022f8   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0022fa   500b     movf	0xb, 0, 0           	MOVF	r0x0b, W
0022fc   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0022fe   500e     movf	0xe, 0, 0           	MOVF	r0x0e, W
002300   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002302   500d     movf	0xd, 0, 0           	MOVF	r0x0d, W
002304   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002306   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002308   0e01     movlw	0x1                	MOVLW	0x01
00230a   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00230c   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
00230e   0e0a     movlw	0xa                	MOVLW	0x0a
002310   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002312   5011     movf	0x11, 0, 0          	MOVF	r0x11, W
002314   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002316   5010     movf	0x10, 0, 0          	MOVF	r0x10, W
002318   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00231a   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
00231c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00231e   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
002320   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002322   5000     movf	0, 0, 0             	MOVF	r0x00, W
002324   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002326   ecf1     call	0x2de2, 0           	CALL	_pprinti
002328   f016
00232a   6e10     movwf	0x10, 0            	MOVWF	r0x10
00232c   cff3     movff	0xff3, 0x11        	MOVFF	PRODL, r0x11
00232e   f011
002330   0e0f     movlw	0xf                	MOVLW	0x0f
002332   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
002334   5010     movf	0x10, 0, 0          	MOVF	r0x10, W
002336   2609     addwf	0x9, 0x1, 0        	ADDWF	r0x09, F
002338   5011     movf	0x11, 0, 0          	MOVF	r0x11, W
00233a   220a     addwfc	0xa, 0x1, 0       	ADDWFC	r0x0a, F
                                           ;	.line	183; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	continue;
00233c   d1e8     bra	0x270e               	BRA	_00273_DS_
                                           _00250_DS_:
                                           ;	.line	185; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	if (*format == 'x' || *format == 'p')
00233e   500f     movf	0xf, 0, 0           	MOVF	r0x0f, W
002340   0a78     xorlw	0x78               	XORLW	0x78
002342   e004     bz	0x234c                	BZ	_00251_DS_
002344   500f     movf	0xf, 0, 0           	MOVF	r0x0f, W
002346   0a70     xorlw	0x70               	XORLW	0x70
002348   e001     bz	0x234c                	BZ	_00251_DS_
00234a   d044     bra	0x23d4               	BRA	_00252_DS_
                                           _00251_DS_:
                                           ;	.line	187; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	pc += pprinti(out, va_arg(args, int), 16, 0, width, pad, 'a');
00234c   5006     movf	0x6, 0, 0           	MOVF	r0x06, W
00234e   0f02     addlw	0x2                	ADDLW	0x02
002350   6e10     movwf	0x10, 0            	MOVWF	r0x10
002352   0e00     movlw	0                  	MOVLW	0x00
002354   2007     addwfc	0x7, 0, 0         	ADDWFC	r0x07, W
002356   6e11     movwf	0x11, 0            	MOVWF	r0x11
002358   0e00     movlw	0                  	MOVLW	0x00
00235a   2008     addwfc	0x8, 0, 0         	ADDWFC	r0x08, W
00235c   6e12     movwf	0x12, 0            	MOVWF	r0x12
00235e   c010     movff	0x10, 0x6          	MOVFF	r0x10, r0x06
002360   f006
002362   c011     movff	0x11, 0x7          	MOVFF	r0x11, r0x07
002364   f007
002366   c012     movff	0x12, 0x8          	MOVFF	r0x12, r0x08
002368   f008
00236a   0efe     movlw	0xfe               	MOVLW	0xfe
00236c   2610     addwf	0x10, 0x1, 0       	ADDWF	r0x10, F
00236e   0eff     movlw	0xff               	MOVLW	0xff
002370   2211     addwfc	0x11, 0x1, 0      	ADDWFC	r0x11, F
002372   2212     addwfc	0x12, 0x1, 0      	ADDWFC	r0x12, F
002374   c010     movff	0x10, 0xfe9        	MOVFF	r0x10, FSR0L
002376   ffe9
002378   c011     movff	0x11, 0xff3        	MOVFF	r0x11, PRODL
00237a   fff3
00237c   5012     movf	0x12, 0, 0          	MOVF	r0x12, W
00237e   ec2b     call	0x56, 0             	CALL	__gptrget2
002380   f000
002382   6e10     movwf	0x10, 0            	MOVWF	r0x10
002384   cff3     movff	0xff3, 0x11        	MOVFF	PRODL, r0x11
002386   f011
002388   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
00238a   0e61     movlw	0x61               	MOVLW	0x61
00238c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00238e   500c     movf	0xc, 0, 0           	MOVF	r0x0c, W
002390   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002392   500b     movf	0xb, 0, 0           	MOVF	r0x0b, W
002394   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002396   500e     movf	0xe, 0, 0           	MOVF	r0x0e, W
002398   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00239a   500d     movf	0xd, 0, 0           	MOVF	r0x0d, W
00239c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00239e   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
0023a0   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
0023a2   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
0023a4   0e10     movlw	0x10               	MOVLW	0x10
0023a6   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0023a8   5011     movf	0x11, 0, 0          	MOVF	r0x11, W
0023aa   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0023ac   5010     movf	0x10, 0, 0          	MOVF	r0x10, W
0023ae   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0023b0   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0023b2   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0023b4   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
0023b6   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0023b8   5000     movf	0, 0, 0             	MOVF	r0x00, W
0023ba   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0023bc   ecf1     call	0x2de2, 0           	CALL	_pprinti
0023be   f016
0023c0   6e10     movwf	0x10, 0            	MOVWF	r0x10
0023c2   cff3     movff	0xff3, 0x11        	MOVFF	PRODL, r0x11
0023c4   f011
0023c6   0e0f     movlw	0xf                	MOVLW	0x0f
0023c8   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
0023ca   5010     movf	0x10, 0, 0          	MOVF	r0x10, W
0023cc   2609     addwf	0x9, 0x1, 0        	ADDWF	r0x09, F
0023ce   5011     movf	0x11, 0, 0          	MOVF	r0x11, W
0023d0   220a     addwfc	0xa, 0x1, 0       	ADDWFC	r0x0a, F
                                           ;	.line	188; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	continue;
0023d2   d19d     bra	0x270e               	BRA	_00273_DS_
                                           _00252_DS_:
                                           ;	.line	190; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	if (*format == 'X' || *format == 'P')
0023d4   500f     movf	0xf, 0, 0           	MOVF	r0x0f, W
0023d6   0a58     xorlw	0x58               	XORLW	0x58
0023d8   e004     bz	0x23e2                	BZ	_00254_DS_
0023da   500f     movf	0xf, 0, 0           	MOVF	r0x0f, W
0023dc   0a50     xorlw	0x50               	XORLW	0x50
0023de   e001     bz	0x23e2                	BZ	_00254_DS_
0023e0   d044     bra	0x246a               	BRA	_00255_DS_
                                           _00254_DS_:
                                           ;	.line	192; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	pc += pprinti(out, va_arg(args, int), 16, 0, width, pad, 'A');
0023e2   5006     movf	0x6, 0, 0           	MOVF	r0x06, W
0023e4   0f02     addlw	0x2                	ADDLW	0x02
0023e6   6e10     movwf	0x10, 0            	MOVWF	r0x10
0023e8   0e00     movlw	0                  	MOVLW	0x00
0023ea   2007     addwfc	0x7, 0, 0         	ADDWFC	r0x07, W
0023ec   6e11     movwf	0x11, 0            	MOVWF	r0x11
0023ee   0e00     movlw	0                  	MOVLW	0x00
0023f0   2008     addwfc	0x8, 0, 0         	ADDWFC	r0x08, W
0023f2   6e12     movwf	0x12, 0            	MOVWF	r0x12
0023f4   c010     movff	0x10, 0x6          	MOVFF	r0x10, r0x06
0023f6   f006
0023f8   c011     movff	0x11, 0x7          	MOVFF	r0x11, r0x07
0023fa   f007
0023fc   c012     movff	0x12, 0x8          	MOVFF	r0x12, r0x08
0023fe   f008
002400   0efe     movlw	0xfe               	MOVLW	0xfe
002402   2610     addwf	0x10, 0x1, 0       	ADDWF	r0x10, F
002404   0eff     movlw	0xff               	MOVLW	0xff
002406   2211     addwfc	0x11, 0x1, 0      	ADDWFC	r0x11, F
002408   2212     addwfc	0x12, 0x1, 0      	ADDWFC	r0x12, F
00240a   c010     movff	0x10, 0xfe9        	MOVFF	r0x10, FSR0L
00240c   ffe9
00240e   c011     movff	0x11, 0xff3        	MOVFF	r0x11, PRODL
002410   fff3
002412   5012     movf	0x12, 0, 0          	MOVF	r0x12, W
002414   ec2b     call	0x56, 0             	CALL	__gptrget2
002416   f000
002418   6e10     movwf	0x10, 0            	MOVWF	r0x10
00241a   cff3     movff	0xff3, 0x11        	MOVFF	PRODL, r0x11
00241c   f011
00241e   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002420   0e41     movlw	0x41               	MOVLW	0x41
002422   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002424   500c     movf	0xc, 0, 0           	MOVF	r0x0c, W
002426   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002428   500b     movf	0xb, 0, 0           	MOVF	r0x0b, W
00242a   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00242c   500e     movf	0xe, 0, 0           	MOVF	r0x0e, W
00242e   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002430   500d     movf	0xd, 0, 0           	MOVF	r0x0d, W
002432   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002434   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002436   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002438   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
00243a   0e10     movlw	0x10               	MOVLW	0x10
00243c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00243e   5011     movf	0x11, 0, 0          	MOVF	r0x11, W
002440   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002442   5010     movf	0x10, 0, 0          	MOVF	r0x10, W
002444   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002446   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002448   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00244a   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
00244c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00244e   5000     movf	0, 0, 0             	MOVF	r0x00, W
002450   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002452   ecf1     call	0x2de2, 0           	CALL	_pprinti
002454   f016
002456   6e10     movwf	0x10, 0            	MOVWF	r0x10
002458   cff3     movff	0xff3, 0x11        	MOVFF	PRODL, r0x11
00245a   f011
00245c   0e0f     movlw	0xf                	MOVLW	0x0f
00245e   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
002460   5010     movf	0x10, 0, 0          	MOVF	r0x10, W
002462   2609     addwf	0x9, 0x1, 0        	ADDWF	r0x09, F
002464   5011     movf	0x11, 0, 0          	MOVF	r0x11, W
002466   220a     addwfc	0xa, 0x1, 0       	ADDWFC	r0x0a, F
                                           ;	.line	193; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	continue;
002468   d152     bra	0x270e               	BRA	_00273_DS_
                                           _00255_DS_:
                                           ;	.line	195; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	if (*format == 'b')
00246a   500f     movf	0xf, 0, 0           	MOVF	r0x0f, W
00246c   0a62     xorlw	0x62               	XORLW	0x62
00246e   e001     bz	0x2472                	BZ	_00334_DS_
002470   d044     bra	0x24fa               	BRA	_00258_DS_
                                           _00334_DS_:
                                           ;	.line	197; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	pc += pprinti(out, va_arg(args, int), 2, 0, width, pad, 'a');
002472   5006     movf	0x6, 0, 0           	MOVF	r0x06, W
002474   0f02     addlw	0x2                	ADDLW	0x02
002476   6e10     movwf	0x10, 0            	MOVWF	r0x10
002478   0e00     movlw	0                  	MOVLW	0x00
00247a   2007     addwfc	0x7, 0, 0         	ADDWFC	r0x07, W
00247c   6e11     movwf	0x11, 0            	MOVWF	r0x11
00247e   0e00     movlw	0                  	MOVLW	0x00
002480   2008     addwfc	0x8, 0, 0         	ADDWFC	r0x08, W
002482   6e12     movwf	0x12, 0            	MOVWF	r0x12
002484   c010     movff	0x10, 0x6          	MOVFF	r0x10, r0x06
002486   f006
002488   c011     movff	0x11, 0x7          	MOVFF	r0x11, r0x07
00248a   f007
00248c   c012     movff	0x12, 0x8          	MOVFF	r0x12, r0x08
00248e   f008
002490   0efe     movlw	0xfe               	MOVLW	0xfe
002492   2610     addwf	0x10, 0x1, 0       	ADDWF	r0x10, F
002494   0eff     movlw	0xff               	MOVLW	0xff
002496   2211     addwfc	0x11, 0x1, 0      	ADDWFC	r0x11, F
002498   2212     addwfc	0x12, 0x1, 0      	ADDWFC	r0x12, F
00249a   c010     movff	0x10, 0xfe9        	MOVFF	r0x10, FSR0L
00249c   ffe9
00249e   c011     movff	0x11, 0xff3        	MOVFF	r0x11, PRODL
0024a0   fff3
0024a2   5012     movf	0x12, 0, 0          	MOVF	r0x12, W
0024a4   ec2b     call	0x56, 0             	CALL	__gptrget2
0024a6   f000
0024a8   6e10     movwf	0x10, 0            	MOVWF	r0x10
0024aa   cff3     movff	0xff3, 0x11        	MOVFF	PRODL, r0x11
0024ac   f011
0024ae   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
0024b0   0e61     movlw	0x61               	MOVLW	0x61
0024b2   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0024b4   500c     movf	0xc, 0, 0           	MOVF	r0x0c, W
0024b6   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0024b8   500b     movf	0xb, 0, 0           	MOVF	r0x0b, W
0024ba   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0024bc   500e     movf	0xe, 0, 0           	MOVF	r0x0e, W
0024be   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0024c0   500d     movf	0xd, 0, 0           	MOVF	r0x0d, W
0024c2   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0024c4   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
0024c6   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
0024c8   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
0024ca   0e02     movlw	0x2                	MOVLW	0x02
0024cc   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0024ce   5011     movf	0x11, 0, 0          	MOVF	r0x11, W
0024d0   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0024d2   5010     movf	0x10, 0, 0          	MOVF	r0x10, W
0024d4   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0024d6   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0024d8   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0024da   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
0024dc   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0024de   5000     movf	0, 0, 0             	MOVF	r0x00, W
0024e0   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0024e2   ecf1     call	0x2de2, 0           	CALL	_pprinti
0024e4   f016
0024e6   6e10     movwf	0x10, 0            	MOVWF	r0x10
0024e8   cff3     movff	0xff3, 0x11        	MOVFF	PRODL, r0x11
0024ea   f011
0024ec   0e0f     movlw	0xf                	MOVLW	0x0f
0024ee   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
0024f0   5010     movf	0x10, 0, 0          	MOVF	r0x10, W
0024f2   2609     addwf	0x9, 0x1, 0        	ADDWF	r0x09, F
0024f4   5011     movf	0x11, 0, 0          	MOVF	r0x11, W
0024f6   220a     addwfc	0xa, 0x1, 0       	ADDWFC	r0x0a, F
                                           ;	.line	198; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	continue;
0024f8   d10a     bra	0x270e               	BRA	_00273_DS_
                                           _00258_DS_:
                                           ;	.line	200; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	if (*format == 'o')
0024fa   500f     movf	0xf, 0, 0           	MOVF	r0x0f, W
0024fc   0a6f     xorlw	0x6f               	XORLW	0x6f
0024fe   e001     bz	0x2502                	BZ	_00336_DS_
002500   d044     bra	0x258a               	BRA	_00260_DS_
                                           _00336_DS_:
                                           ;	.line	202; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	pc += pprinti(out, va_arg(args, int), 8, 0, width, pad, 'a');
002502   5006     movf	0x6, 0, 0           	MOVF	r0x06, W
002504   0f02     addlw	0x2                	ADDLW	0x02
002506   6e10     movwf	0x10, 0            	MOVWF	r0x10
002508   0e00     movlw	0                  	MOVLW	0x00
00250a   2007     addwfc	0x7, 0, 0         	ADDWFC	r0x07, W
00250c   6e11     movwf	0x11, 0            	MOVWF	r0x11
00250e   0e00     movlw	0                  	MOVLW	0x00
002510   2008     addwfc	0x8, 0, 0         	ADDWFC	r0x08, W
002512   6e12     movwf	0x12, 0            	MOVWF	r0x12
002514   c010     movff	0x10, 0x6          	MOVFF	r0x10, r0x06
002516   f006
002518   c011     movff	0x11, 0x7          	MOVFF	r0x11, r0x07
00251a   f007
00251c   c012     movff	0x12, 0x8          	MOVFF	r0x12, r0x08
00251e   f008
002520   0efe     movlw	0xfe               	MOVLW	0xfe
002522   2610     addwf	0x10, 0x1, 0       	ADDWF	r0x10, F
002524   0eff     movlw	0xff               	MOVLW	0xff
002526   2211     addwfc	0x11, 0x1, 0      	ADDWFC	r0x11, F
002528   2212     addwfc	0x12, 0x1, 0      	ADDWFC	r0x12, F
00252a   c010     movff	0x10, 0xfe9        	MOVFF	r0x10, FSR0L
00252c   ffe9
00252e   c011     movff	0x11, 0xff3        	MOVFF	r0x11, PRODL
002530   fff3
002532   5012     movf	0x12, 0, 0          	MOVF	r0x12, W
002534   ec2b     call	0x56, 0             	CALL	__gptrget2
002536   f000
002538   6e10     movwf	0x10, 0            	MOVWF	r0x10
00253a   cff3     movff	0xff3, 0x11        	MOVFF	PRODL, r0x11
00253c   f011
00253e   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002540   0e61     movlw	0x61               	MOVLW	0x61
002542   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002544   500c     movf	0xc, 0, 0           	MOVF	r0x0c, W
002546   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002548   500b     movf	0xb, 0, 0           	MOVF	r0x0b, W
00254a   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00254c   500e     movf	0xe, 0, 0           	MOVF	r0x0e, W
00254e   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002550   500d     movf	0xd, 0, 0           	MOVF	r0x0d, W
002552   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002554   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002556   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002558   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
00255a   0e08     movlw	0x8                	MOVLW	0x08
00255c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00255e   5011     movf	0x11, 0, 0          	MOVF	r0x11, W
002560   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002562   5010     movf	0x10, 0, 0          	MOVF	r0x10, W
002564   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002566   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002568   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00256a   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
00256c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00256e   5000     movf	0, 0, 0             	MOVF	r0x00, W
002570   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002572   ecf1     call	0x2de2, 0           	CALL	_pprinti
002574   f016
002576   6e10     movwf	0x10, 0            	MOVWF	r0x10
002578   cff3     movff	0xff3, 0x11        	MOVFF	PRODL, r0x11
00257a   f011
00257c   0e0f     movlw	0xf                	MOVLW	0x0f
00257e   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
002580   5010     movf	0x10, 0, 0          	MOVF	r0x10, W
002582   2609     addwf	0x9, 0x1, 0        	ADDWF	r0x09, F
002584   5011     movf	0x11, 0, 0          	MOVF	r0x11, W
002586   220a     addwfc	0xa, 0x1, 0       	ADDWFC	r0x0a, F
                                           ;	.line	203; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	continue;
002588   d0c2     bra	0x270e               	BRA	_00273_DS_
                                           _00260_DS_:
                                           ;	.line	205; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	if (*format == 'u')
00258a   500f     movf	0xf, 0, 0           	MOVF	r0x0f, W
00258c   0a75     xorlw	0x75               	XORLW	0x75
00258e   e001     bz	0x2592                	BZ	_00338_DS_
002590   d044     bra	0x261a               	BRA	_00262_DS_
                                           _00338_DS_:
                                           ;	.line	207; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	pc += pprinti(out, va_arg(args, int), 10, 0, width, pad, 'a');
002592   5006     movf	0x6, 0, 0           	MOVF	r0x06, W
002594   0f02     addlw	0x2                	ADDLW	0x02
002596   6e10     movwf	0x10, 0            	MOVWF	r0x10
002598   0e00     movlw	0                  	MOVLW	0x00
00259a   2007     addwfc	0x7, 0, 0         	ADDWFC	r0x07, W
00259c   6e11     movwf	0x11, 0            	MOVWF	r0x11
00259e   0e00     movlw	0                  	MOVLW	0x00
0025a0   2008     addwfc	0x8, 0, 0         	ADDWFC	r0x08, W
0025a2   6e12     movwf	0x12, 0            	MOVWF	r0x12
0025a4   c010     movff	0x10, 0x6          	MOVFF	r0x10, r0x06
0025a6   f006
0025a8   c011     movff	0x11, 0x7          	MOVFF	r0x11, r0x07
0025aa   f007
0025ac   c012     movff	0x12, 0x8          	MOVFF	r0x12, r0x08
0025ae   f008
0025b0   0efe     movlw	0xfe               	MOVLW	0xfe
0025b2   2610     addwf	0x10, 0x1, 0       	ADDWF	r0x10, F
0025b4   0eff     movlw	0xff               	MOVLW	0xff
0025b6   2211     addwfc	0x11, 0x1, 0      	ADDWFC	r0x11, F
0025b8   2212     addwfc	0x12, 0x1, 0      	ADDWFC	r0x12, F
0025ba   c010     movff	0x10, 0xfe9        	MOVFF	r0x10, FSR0L
0025bc   ffe9
0025be   c011     movff	0x11, 0xff3        	MOVFF	r0x11, PRODL
0025c0   fff3
0025c2   5012     movf	0x12, 0, 0          	MOVF	r0x12, W
0025c4   ec2b     call	0x56, 0             	CALL	__gptrget2
0025c6   f000
0025c8   6e10     movwf	0x10, 0            	MOVWF	r0x10
0025ca   cff3     movff	0xff3, 0x11        	MOVFF	PRODL, r0x11
0025cc   f011
0025ce   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
0025d0   0e61     movlw	0x61               	MOVLW	0x61
0025d2   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0025d4   500c     movf	0xc, 0, 0           	MOVF	r0x0c, W
0025d6   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0025d8   500b     movf	0xb, 0, 0           	MOVF	r0x0b, W
0025da   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0025dc   500e     movf	0xe, 0, 0           	MOVF	r0x0e, W
0025de   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0025e0   500d     movf	0xd, 0, 0           	MOVF	r0x0d, W
0025e2   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0025e4   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
0025e6   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
0025e8   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
0025ea   0e0a     movlw	0xa                	MOVLW	0x0a
0025ec   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0025ee   5011     movf	0x11, 0, 0          	MOVF	r0x11, W
0025f0   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0025f2   5010     movf	0x10, 0, 0          	MOVF	r0x10, W
0025f4   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0025f6   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0025f8   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0025fa   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
0025fc   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0025fe   5000     movf	0, 0, 0             	MOVF	r0x00, W
002600   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002602   ecf1     call	0x2de2, 0           	CALL	_pprinti
002604   f016
002606   6e10     movwf	0x10, 0            	MOVWF	r0x10
002608   cff3     movff	0xff3, 0x11        	MOVFF	PRODL, r0x11
00260a   f011
00260c   0e0f     movlw	0xf                	MOVLW	0x0f
00260e   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
002610   5010     movf	0x10, 0, 0          	MOVF	r0x10, W
002612   2609     addwf	0x9, 0x1, 0        	ADDWF	r0x09, F
002614   5011     movf	0x11, 0, 0          	MOVF	r0x11, W
002616   220a     addwfc	0xa, 0x1, 0       	ADDWFC	r0x0a, F
                                           ;	.line	208; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	continue;
002618   d07a     bra	0x270e               	BRA	_00273_DS_
                                           _00262_DS_:
                                           ;	.line	210; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	if (*format == 'c')
00261a   500f     movf	0xf, 0, 0           	MOVF	r0x0f, W
00261c   0a63     xorlw	0x63               	XORLW	0x63
00261e   e001     bz	0x2622                	BZ	_00340_DS_
002620   d03e     bra	0x269e               	BRA	_00264_DS_
                                           _00340_DS_:
                                           ;	.line	213; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	scr[0] = (char)va_arg(args, int);
002622   5006     movf	0x6, 0, 0           	MOVF	r0x06, W
002624   0f02     addlw	0x2                	ADDLW	0x02
002626   6e10     movwf	0x10, 0            	MOVWF	r0x10
002628   0e00     movlw	0                  	MOVLW	0x00
00262a   2007     addwfc	0x7, 0, 0         	ADDWFC	r0x07, W
00262c   6e11     movwf	0x11, 0            	MOVWF	r0x11
00262e   0e00     movlw	0                  	MOVLW	0x00
002630   2008     addwfc	0x8, 0, 0         	ADDWFC	r0x08, W
002632   6e12     movwf	0x12, 0            	MOVWF	r0x12
002634   c010     movff	0x10, 0x6          	MOVFF	r0x10, r0x06
002636   f006
002638   c011     movff	0x11, 0x7          	MOVFF	r0x11, r0x07
00263a   f007
00263c   c012     movff	0x12, 0x8          	MOVFF	r0x12, r0x08
00263e   f008
002640   0efe     movlw	0xfe               	MOVLW	0xfe
002642   2610     addwf	0x10, 0x1, 0       	ADDWF	r0x10, F
002644   0eff     movlw	0xff               	MOVLW	0xff
002646   2211     addwfc	0x11, 0x1, 0      	ADDWFC	r0x11, F
002648   2212     addwfc	0x12, 0x1, 0      	ADDWFC	r0x12, F
00264a   c010     movff	0x10, 0xfe9        	MOVFF	r0x10, FSR0L
00264c   ffe9
00264e   c011     movff	0x11, 0xff3        	MOVFF	r0x11, PRODL
002650   fff3
002652   5012     movf	0x12, 0, 0          	MOVF	r0x12, W
002654   ec2b     call	0x56, 0             	CALL	__gptrget2
002656   f000
002658   0102     movlb	0x2                	BANKSEL	_pprint_scr_1_1
00265a   6fe2     movwf	0xe2, 0x1          	MOVWF	_pprint_scr_1_1, B
                                           ; removed redundant BANKSEL
                                           ;	.line	215; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	scr[1] = '\0';
00265c   6be3     clrf	0xe3, 0x1           	CLRF	(_pprint_scr_1_1 + 1), B
                                           ;	.line	216; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	pc += pprints(out, scr, width, pad);
00265e   500c     movf	0xc, 0, 0           	MOVF	r0x0c, W
002660   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002662   500b     movf	0xb, 0, 0           	MOVF	r0x0b, W
002664   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002666   500e     movf	0xe, 0, 0           	MOVF	r0x0e, W
002668   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00266a   500d     movf	0xd, 0, 0           	MOVF	r0x0d, W
00266c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00266e   0e80     movlw	0x80               	MOVLW	0x80
002670   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002672   0e02     movlw	0x2                	MOVLW	HIGH(_pprint_scr_1_1)
002674   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002676   0ee2     movlw	0xe2               	MOVLW	LOW(_pprint_scr_1_1)
002678   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00267a   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
00267c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00267e   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
002680   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002682   5000     movf	0, 0, 0             	MOVF	r0x00, W
002684   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002686   ec7a     call	0x30f4, 0           	CALL	_pprints
002688   f018
00268a   6e10     movwf	0x10, 0            	MOVWF	r0x10
00268c   cff3     movff	0xff3, 0x11        	MOVFF	PRODL, r0x11
00268e   f011
002690   0e0a     movlw	0xa                	MOVLW	0x0a
002692   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
002694   5010     movf	0x10, 0, 0          	MOVF	r0x10, W
002696   2609     addwf	0x9, 0x1, 0        	ADDWF	r0x09, F
002698   5011     movf	0x11, 0, 0          	MOVF	r0x11, W
00269a   220a     addwfc	0xa, 0x1, 0       	ADDWFC	r0x0a, F
                                           ;	.line	217; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	continue;
00269c   d038     bra	0x270e               	BRA	_00273_DS_
                                           _00264_DS_:
                                           ;	.line	219; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	if (*format == 'f')
00269e   500f     movf	0xf, 0, 0           	MOVF	r0x0f, W
0026a0   0a66     xorlw	0x66               	XORLW	0x66
0026a2   e135     bnz	0x270e               	BNZ	_00273_DS_
                                           ;	.line	221; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	pc += pprints(out, "not yet implemented\0", width, pad);
0026a4   500c     movf	0xc, 0, 0           	MOVF	r0x0c, W
0026a6   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0026a8   500b     movf	0xb, 0, 0           	MOVF	r0x0b, W
0026aa   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0026ac   500e     movf	0xe, 0, 0           	MOVF	r0x0e, W
0026ae   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0026b0   500d     movf	0xd, 0, 0           	MOVF	r0x0d, W
0026b2   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0026b4   0e00     movlw	0                  	MOVLW	UPPER(__str_1)
0026b6   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0026b8   0e3c     movlw	0x3c               	MOVLW	HIGH(__str_1)
0026ba   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0026bc   0e28     movlw	0x28               	MOVLW	LOW(__str_1)
0026be   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0026c0   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0026c2   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0026c4   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
0026c6   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0026c8   5000     movf	0, 0, 0             	MOVF	r0x00, W
0026ca   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0026cc   ec7a     call	0x30f4, 0           	CALL	_pprints
0026ce   f018
0026d0   6e0b     movwf	0xb, 0             	MOVWF	r0x0b
0026d2   cff3     movff	0xff3, 0xc         	MOVFF	PRODL, r0x0c
0026d4   f00c
0026d6   0e0a     movlw	0xa                	MOVLW	0x0a
0026d8   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
0026da   500b     movf	0xb, 0, 0           	MOVF	r0x0b, W
0026dc   2609     addwf	0x9, 0x1, 0        	ADDWF	r0x09, F
0026de   500c     movf	0xc, 0, 0           	MOVF	r0x0c, W
0026e0   220a     addwfc	0xa, 0x1, 0       	ADDWFC	r0x0a, F
                                           ;	.line	222; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	continue;
0026e2   d015     bra	0x270e               	BRA	_00273_DS_
                                           _00267_DS_:
                                           ;	.line	228; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	pprintchar(out, *format);
0026e4   c003     movff	0x3, 0xfe9         	MOVFF	r0x03, FSR0L
0026e6   ffe9
0026e8   c004     movff	0x4, 0xff3         	MOVFF	r0x04, PRODL
0026ea   fff3
0026ec   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
0026ee   ec29     call	0x52, 0             	CALL	__gptrget1
0026f0   f000
                                           ; #	MOVWF	r0x0b
                                           ; #	MOVF	r0x0b, W
0026f2   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0026f4   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0026f6   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0026f8   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
0026fa   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0026fc   5000     movf	0, 0, 0             	MOVF	r0x00, W
0026fe   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002700   ec27     call	0x344e, 0           	CALL	_pprintchar
002702   f01a
002704   0e04     movlw	0x4                	MOVLW	0x04
002706   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	229; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	++pc;
002708   2a09     incf	0x9, 0x1, 0         	INCF	r0x09, F
00270a   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
00270c   2a0a     incf	0xa, 0x1, 0         	INCF	r0x0a, F
                                           _00273_DS_:
                                           ;	.line	147; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	for (; *format != 0; ++format)
00270e   2a03     incf	0x3, 0x1, 0         	INCF	r0x03, F
002710   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
002712   2a04     incf	0x4, 0x1, 0         	INCF	r0x04, F
002714   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
002716   2a05     incf	0x5, 0x1, 0         	INCF	r0x05, F
002718   ef81     goto	0x2102              	GOTO	_00271_DS_
00271a   f010
                                           _00274_DS_:
                                           ;	.line	232; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	if (out) **out = '\0';
00271c   5000     movf	0, 0, 0             	MOVF	r0x00, W
00271e   1001     iorwf	0x1, 0, 0          	IORWF	r0x01, W
002720   1002     iorwf	0x2, 0, 0          	IORWF	r0x02, W
002722   e014     bz	0x274c                	BZ	_00276_DS_
002724   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
002726   ffe9
002728   c001     movff	0x1, 0xff3         	MOVFF	r0x01, PRODL
00272a   fff3
00272c   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
00272e   ec2d     call	0x5a, 0             	CALL	__gptrget3
002730   f000
002732   6e00     movwf	0, 0               	MOVWF	r0x00
002734   cff3     movff	0xff3, 0x1         	MOVFF	PRODL, r0x01
002736   f001
002738   cff4     movff	0xff4, 0x2         	MOVFF	PRODH, r0x02
00273a   f002
00273c   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
00273e   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
002740   ffe9
002742   c001     movff	0x1, 0xff3         	MOVFF	r0x01, PRODL
002744   fff3
002746   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002748   ec31     call	0x62, 0             	CALL	__gptrput1
00274a   f000
                                           _00276_DS_:
                                           ;	.line	234; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	return pc;
00274c   c00a     movff	0xa, 0xff3         	MOVFF	r0x0a, PRODL
00274e   fff3
002750   5009     movf	0x9, 0, 0           	MOVF	r0x09, W
002752   cfe4     movff	0xfe4, 0x13        	MOVFF	PREINC1, r0x13
002754   f013
002756   cfe4     movff	0xfe4, 0x12        	MOVFF	PREINC1, r0x12
002758   f012
00275a   cfe4     movff	0xfe4, 0x11        	MOVFF	PREINC1, r0x11
00275c   f011
00275e   cfe4     movff	0xfe4, 0x10        	MOVFF	PREINC1, r0x10
002760   f010
002762   cfe4     movff	0xfe4, 0xf         	MOVFF	PREINC1, r0x0f
002764   f00f
002766   cfe4     movff	0xfe4, 0xe         	MOVFF	PREINC1, r0x0e
002768   f00e
00276a   cfe4     movff	0xfe4, 0xd         	MOVFF	PREINC1, r0x0d
00276c   f00d
00276e   cfe4     movff	0xfe4, 0xc         	MOVFF	PREINC1, r0x0c
002770   f00c
002772   cfe4     movff	0xfe4, 0xb         	MOVFF	PREINC1, r0x0b
002774   f00b
002776   cfe4     movff	0xfe4, 0xa         	MOVFF	PREINC1, r0x0a
002778   f00a
00277a   cfe4     movff	0xfe4, 0x9         	MOVFF	PREINC1, r0x09
00277c   f009
00277e   cfe4     movff	0xfe4, 0x8         	MOVFF	PREINC1, r0x08
002780   f008
002782   cfe4     movff	0xfe4, 0x7         	MOVFF	PREINC1, r0x07
002784   f007
002786   cfe4     movff	0xfe4, 0x6         	MOVFF	PREINC1, r0x06
002788   f006
00278a   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
00278c   f005
00278e   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
002790   f004
002792   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
002794   f003
002796   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
002798   f002
00279a   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
00279c   f001
00279e   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0027a0   f000
0027a2   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
0027a4   ffd9
0027a6   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__pprinti	code
                                           _pprinti:
                                           ;	.line	92; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	static int pprinti(char **out, int i, int b, int sg, int width, int pad, int letbase)
002de2   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
002de4   ffe5
002de6   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
002de8   ffd9
002dea   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
002dec   ffe5
002dee   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
002df0   ffe5
002df2   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
002df4   ffe5
002df6   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
002df8   ffe5
002dfa   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
002dfc   ffe5
002dfe   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
002e00   ffe5
002e02   c006     movff	0x6, 0xfe5         	MOVFF	r0x06, POSTDEC1
002e04   ffe5
002e06   c007     movff	0x7, 0xfe5         	MOVFF	r0x07, POSTDEC1
002e08   ffe5
002e0a   c008     movff	0x8, 0xfe5         	MOVFF	r0x08, POSTDEC1
002e0c   ffe5
002e0e   c009     movff	0x9, 0xfe5         	MOVFF	r0x09, POSTDEC1
002e10   ffe5
002e12   c00a     movff	0xa, 0xfe5         	MOVFF	r0x0a, POSTDEC1
002e14   ffe5
002e16   c00b     movff	0xb, 0xfe5         	MOVFF	r0x0b, POSTDEC1
002e18   ffe5
002e1a   c00c     movff	0xc, 0xfe5         	MOVFF	r0x0c, POSTDEC1
002e1c   ffe5
002e1e   c00d     movff	0xd, 0xfe5         	MOVFF	r0x0d, POSTDEC1
002e20   ffe5
002e22   c00e     movff	0xe, 0xfe5         	MOVFF	r0x0e, POSTDEC1
002e24   ffe5
002e26   c00f     movff	0xf, 0xfe5         	MOVFF	r0x0f, POSTDEC1
002e28   ffe5
002e2a   c010     movff	0x10, 0xfe5        	MOVFF	r0x10, POSTDEC1
002e2c   ffe5
002e2e   c011     movff	0x11, 0xfe5        	MOVFF	r0x11, POSTDEC1
002e30   ffe5
002e32   c012     movff	0x12, 0xfe5        	MOVFF	r0x12, POSTDEC1
002e34   ffe5
002e36   c013     movff	0x13, 0xfe5        	MOVFF	r0x13, POSTDEC1
002e38   ffe5
002e3a   c014     movff	0x14, 0xfe5        	MOVFF	r0x14, POSTDEC1
002e3c   ffe5
002e3e   c015     movff	0x15, 0xfe5        	MOVFF	r0x15, POSTDEC1
002e40   ffe5
002e42   c016     movff	0x16, 0xfe5        	MOVFF	r0x16, POSTDEC1
002e44   ffe5
002e46   c017     movff	0x17, 0xfe5        	MOVFF	r0x17, POSTDEC1
002e48   ffe5
002e4a   c018     movff	0x18, 0xfe5        	MOVFF	r0x18, POSTDEC1
002e4c   ffe5
002e4e   c019     movff	0x19, 0xfe5        	MOVFF	r0x19, POSTDEC1
002e50   ffe5
002e52   c01a     movff	0x1a, 0xfe5        	MOVFF	r0x1a, POSTDEC1
002e54   ffe5
002e56   0e02     movlw	0x2                	MOVLW	0x02
002e58   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
002e5a   f000
002e5c   0e03     movlw	0x3                	MOVLW	0x03
002e5e   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
002e60   f001
002e62   0e04     movlw	0x4                	MOVLW	0x04
002e64   cfdb     movff	0xfdb, 0x2         	MOVFF	PLUSW2, r0x02
002e66   f002
002e68   0e05     movlw	0x5                	MOVLW	0x05
002e6a   cfdb     movff	0xfdb, 0x3         	MOVFF	PLUSW2, r0x03
002e6c   f003
002e6e   0e06     movlw	0x6                	MOVLW	0x06
002e70   cfdb     movff	0xfdb, 0x4         	MOVFF	PLUSW2, r0x04
002e72   f004
002e74   0e07     movlw	0x7                	MOVLW	0x07
002e76   cfdb     movff	0xfdb, 0x5         	MOVFF	PLUSW2, r0x05
002e78   f005
002e7a   0e08     movlw	0x8                	MOVLW	0x08
002e7c   cfdb     movff	0xfdb, 0x6         	MOVFF	PLUSW2, r0x06
002e7e   f006
002e80   0e09     movlw	0x9                	MOVLW	0x09
002e82   cfdb     movff	0xfdb, 0x7         	MOVFF	PLUSW2, r0x07
002e84   f007
002e86   0e0a     movlw	0xa                	MOVLW	0x0a
002e88   cfdb     movff	0xfdb, 0x8         	MOVFF	PLUSW2, r0x08
002e8a   f008
002e8c   0e0b     movlw	0xb                	MOVLW	0x0b
002e8e   cfdb     movff	0xfdb, 0x9         	MOVFF	PLUSW2, r0x09
002e90   f009
002e92   0e0c     movlw	0xc                	MOVLW	0x0c
002e94   cfdb     movff	0xfdb, 0xa         	MOVFF	PLUSW2, r0x0a
002e96   f00a
002e98   0e0d     movlw	0xd                	MOVLW	0x0d
002e9a   cfdb     movff	0xfdb, 0xb         	MOVFF	PLUSW2, r0x0b
002e9c   f00b
002e9e   0e0e     movlw	0xe                	MOVLW	0x0e
002ea0   cfdb     movff	0xfdb, 0xc         	MOVFF	PLUSW2, r0x0c
002ea2   f00c
002ea4   0e0f     movlw	0xf                	MOVLW	0x0f
002ea6   cfdb     movff	0xfdb, 0xd         	MOVFF	PLUSW2, r0x0d
002ea8   f00d
002eaa   0e10     movlw	0x10               	MOVLW	0x10
002eac   cfdb     movff	0xfdb, 0xe         	MOVFF	PLUSW2, r0x0e
002eae   f00e
                                           ;	.line	96; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	int t, neg = 0, pc = 0;
002eb0   6a0f     clrf	0xf, 0              	CLRF	r0x0f
002eb2   6a10     clrf	0x10, 0             	CLRF	r0x10
002eb4   6a11     clrf	0x11, 0             	CLRF	r0x11
002eb6   6a12     clrf	0x12, 0             	CLRF	r0x12
                                           ;	.line	97; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	unsigned int u = i;
002eb8   c003     movff	0x3, 0x13          	MOVFF	r0x03, r0x13
002eba   f013
002ebc   c004     movff	0x4, 0x14          	MOVFF	r0x04, r0x14
002ebe   f014
                                           ;	.line	99; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	if (i == 0)
002ec0   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
002ec2   1004     iorwf	0x4, 0, 0          	IORWF	r0x04, W
002ec4   e123     bnz	0x2f0c               	BNZ	_00200_DS_
                                           ;	.line	101; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	print_buf[0] = '0';
002ec6   0e30     movlw	0x30               	MOVLW	0x30
002ec8   0102     movlb	0x2                	BANKSEL	_pprinti_print_buf_1_1
002eca   6fd0     movwf	0xd0, 0x1          	MOVWF	_pprinti_print_buf_1_1, B
                                           ; removed redundant BANKSEL
                                           ;	.line	102; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	print_buf[1] = '\0';
002ecc   6bd1     clrf	0xd1, 0x1           	CLRF	(_pprinti_print_buf_1_1 + 1), B
                                           ;	.line	103; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	return pprints(out, print_buf, width, pad);
002ece   500c     movf	0xc, 0, 0           	MOVF	r0x0c, W
002ed0   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002ed2   500b     movf	0xb, 0, 0           	MOVF	r0x0b, W
002ed4   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002ed6   500a     movf	0xa, 0, 0           	MOVF	r0x0a, W
002ed8   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002eda   5009     movf	0x9, 0, 0           	MOVF	r0x09, W
002edc   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002ede   0e80     movlw	0x80               	MOVLW	0x80
002ee0   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002ee2   0e02     movlw	0x2                	MOVLW	HIGH(_pprinti_print_buf_1_1)
002ee4   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002ee6   0ed0     movlw	0xd0               	MOVLW	LOW(_pprinti_print_buf_1_1)
002ee8   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002eea   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002eec   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002eee   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
002ef0   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002ef2   5000     movf	0, 0, 0             	MOVF	r0x00, W
002ef4   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002ef6   ec7a     call	0x30f4, 0           	CALL	_pprints
002ef8   f018
002efa   6e15     movwf	0x15, 0            	MOVWF	r0x15
002efc   cff3     movff	0xff3, 0x16        	MOVFF	PRODL, r0x16
002efe   f016
002f00   0e0a     movlw	0xa                	MOVLW	0x0a
002f02   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
002f04   c016     movff	0x16, 0xff3        	MOVFF	r0x16, PRODL
002f06   fff3
002f08   5015     movf	0x15, 0, 0          	MOVF	r0x15, W
002f0a   d0bb     bra	0x3082               	BRA	_00216_DS_
                                           _00200_DS_:
                                           ;	.line	106; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	if (sg && b == 10 && i < 0)
002f0c   5007     movf	0x7, 0, 0           	MOVF	r0x07, W
002f0e   1008     iorwf	0x8, 0, 0          	IORWF	r0x08, W
002f10   e013     bz	0x2f38                	BZ	_00202_DS_
002f12   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
002f14   0a0a     xorlw	0xa                	XORLW	0x0a
002f16   e102     bnz	0x2f1c               	BNZ	_00229_DS_
002f18   5006     movf	0x6, 0, 0           	MOVF	r0x06, W
002f1a   e001     bz	0x2f1e                	BZ	_00230_DS_
                                           _00229_DS_:
002f1c   d00d     bra	0x2f38               	BRA	_00202_DS_
                                           _00230_DS_:
002f1e   80d8     bsf	0xd8, 0, 0           	BSF	STATUS, 0
002f20   ae04     btfss	0x4, 0x7, 0        	BTFSS	r0x04, 7
002f22   90d8     bcf	0xd8, 0, 0           	BCF	STATUS, 0
002f24   e309     bnc	0x2f38               	BNC	_00202_DS_
                                           ;	.line	108; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	neg = 1;
002f26   0e01     movlw	0x1                	MOVLW	0x01
002f28   6e0f     movwf	0xf, 0             	MOVWF	r0x0f
002f2a   6a10     clrf	0x10, 0             	CLRF	r0x10
                                           ;	.line	109; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	u = -i;
002f2c   1c04     comf	0x4, 0, 0           	COMF	r0x04, W
002f2e   6e14     movwf	0x14, 0            	MOVWF	r0x14
002f30   1c03     comf	0x3, 0, 0           	COMF	r0x03, W
002f32   6e13     movwf	0x13, 0            	MOVWF	r0x13
002f34   4a13     infsnz	0x13, 0x1, 0      	INFSNZ	r0x13, F
002f36   2a14     incf	0x14, 0x1, 0        	INCF	r0x14, F
                                           _00202_DS_:
                                           ;	.line	112; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	s = print_buf + PRINT_BUF_LEN-1;
002f38   0e02     movlw	0x2                	MOVLW	HIGH(_pprinti_print_buf_1_1 + 11)
002f3a   6e04     movwf	0x4, 0             	MOVWF	r0x04
002f3c   0edb     movlw	0xdb               	MOVLW	LOW(_pprinti_print_buf_1_1 + 11)
002f3e   6e03     movwf	0x3, 0             	MOVWF	r0x03
002f40   0e80     movlw	0x80               	MOVLW	0x80
002f42   6e07     movwf	0x7, 0             	MOVWF	r0x07
                                           ;	.line	113; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	*s = '\0';
002f44   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002f46   c003     movff	0x3, 0xfe9         	MOVFF	r0x03, FSR0L
002f48   ffe9
002f4a   c004     movff	0x4, 0xff3         	MOVFF	r0x04, PRODL
002f4c   fff3
002f4e   ec31     call	0x62, 0             	CALL	__gptrput1
002f50   f000
                                           ;	.line	115; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	while (u)
002f52   500d     movf	0xd, 0, 0           	MOVF	r0x0d, W
002f54   0fc6     addlw	0xc6               	ADDLW	0xc6
002f56   6e0d     movwf	0xd, 0             	MOVWF	r0x0d
002f58   c005     movff	0x5, 0xe           	MOVFF	r0x05, r0x0e
002f5a   f00e
002f5c   c006     movff	0x6, 0x15          	MOVFF	r0x06, r0x15
002f5e   f015
002f60   c003     movff	0x3, 0x16          	MOVFF	r0x03, r0x16
002f62   f016
002f64   c004     movff	0x4, 0x17          	MOVFF	r0x04, r0x17
002f66   f017
002f68   c007     movff	0x7, 0x18          	MOVFF	r0x07, r0x18
002f6a   f018
                                           _00207_DS_:
002f6c   5013     movf	0x13, 0, 0          	MOVF	r0x13, W
002f6e   1014     iorwf	0x14, 0, 0         	IORWF	r0x14, W
002f70   e037     bz	0x2fe0                	BZ	_00228_DS_
                                           ;	.line	117; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	t = u % b;
002f72   5015     movf	0x15, 0, 0          	MOVF	r0x15, W
002f74   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002f76   500e     movf	0xe, 0, 0           	MOVF	r0x0e, W
002f78   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002f7a   5014     movf	0x14, 0, 0          	MOVF	r0x14, W
002f7c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002f7e   5013     movf	0x13, 0, 0          	MOVF	r0x13, W
002f80   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002f82   ec07     call	0x360e, 0           	CALL	__moduint
002f84   f01b
002f86   6e19     movwf	0x19, 0            	MOVWF	r0x19
002f88   cff3     movff	0xff3, 0x1a        	MOVFF	PRODL, r0x1a
002f8a   f01a
002f8c   0e04     movlw	0x4                	MOVLW	0x04
002f8e   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	118; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	if( t >= 10 )
002f90   501a     movf	0x1a, 0, 0          	MOVF	r0x1a, W
002f92   0f80     addlw	0x80               	ADDLW	0x80
002f94   0f80     addlw	0x80               	ADDLW	0x80
002f96   e102     bnz	0x2f9c               	BNZ	_00232_DS_
002f98   0e0a     movlw	0xa                	MOVLW	0x0a
002f9a   5c19     subwf	0x19, 0, 0         	SUBWF	r0x19, W
                                           _00232_DS_:
002f9c   e302     bnc	0x2fa2               	BNC	_00206_DS_
                                           ;	.line	119; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	t += letbase - '0' - 10;
002f9e   500d     movf	0xd, 0, 0           	MOVF	r0x0d, W
002fa0   2619     addwf	0x19, 0x1, 0       	ADDWF	r0x19, F
                                           _00206_DS_:
                                           ;	.line	120; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	*--s = t + '0';
002fa2   0eff     movlw	0xff               	MOVLW	0xff
002fa4   2616     addwf	0x16, 0x1, 0       	ADDWF	r0x16, F
002fa6   2217     addwfc	0x17, 0x1, 0      	ADDWFC	r0x17, F
002fa8   2218     addwfc	0x18, 0x1, 0      	ADDWFC	r0x18, F
002faa   0e30     movlw	0x30               	MOVLW	0x30
002fac   2619     addwf	0x19, 0x1, 0       	ADDWF	r0x19, F
002fae   c019     movff	0x19, 0xfe5        	MOVFF	r0x19, POSTDEC1
002fb0   ffe5
002fb2   c016     movff	0x16, 0xfe9        	MOVFF	r0x16, FSR0L
002fb4   ffe9
002fb6   c017     movff	0x17, 0xff3        	MOVFF	r0x17, PRODL
002fb8   fff3
002fba   5018     movf	0x18, 0, 0          	MOVF	r0x18, W
002fbc   ec31     call	0x62, 0             	CALL	__gptrput1
002fbe   f000
                                           ;	.line	121; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	u /= b;
002fc0   5006     movf	0x6, 0, 0           	MOVF	r0x06, W
002fc2   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002fc4   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
002fc6   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002fc8   5014     movf	0x14, 0, 0          	MOVF	r0x14, W
002fca   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002fcc   5013     movf	0x13, 0, 0          	MOVF	r0x13, W
002fce   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002fd0   ecb9     call	0x3772, 0           	CALL	__divuint
002fd2   f01b
002fd4   6e13     movwf	0x13, 0            	MOVWF	r0x13
002fd6   cff3     movff	0xff3, 0x14        	MOVFF	PRODL, r0x14
002fd8   f014
002fda   0e04     movlw	0x4                	MOVLW	0x04
002fdc   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
002fde   d7c6     bra	0x2f6c               	BRA	_00207_DS_
                                           _00228_DS_:
002fe0   c016     movff	0x16, 0x3          	MOVFF	r0x16, r0x03
002fe2   f003
002fe4   c017     movff	0x17, 0x4          	MOVFF	r0x17, r0x04
002fe6   f004
002fe8   c018     movff	0x18, 0x7          	MOVFF	r0x18, r0x07
002fea   f007
                                           ;	.line	124; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	if (neg)
002fec   500f     movf	0xf, 0, 0           	MOVF	r0x0f, W
002fee   1010     iorwf	0x10, 0, 0         	IORWF	r0x10, W
002ff0   e026     bz	0x303e                	BZ	_00215_DS_
                                           ;	.line	126; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	if (width && (pad & PAD_ZERO))
002ff2   5009     movf	0x9, 0, 0           	MOVF	r0x09, W
002ff4   100a     iorwf	0xa, 0, 0          	IORWF	r0x0a, W
002ff6   e016     bz	0x3024                	BZ	_00211_DS_
002ff8   a20b     btfss	0xb, 0x1, 0        	BTFSS	r0x0b, 1
002ffa   d014     bra	0x3024               	BRA	_00211_DS_
                                           ;	.line	128; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	pprintchar(out, '-');
002ffc   0e2d     movlw	0x2d               	MOVLW	0x2d
002ffe   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003000   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
003002   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003004   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
003006   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003008   5000     movf	0, 0, 0             	MOVF	r0x00, W
00300a   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00300c   ec27     call	0x344e, 0           	CALL	_pprintchar
00300e   f01a
003010   0e04     movlw	0x4                	MOVLW	0x04
003012   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	129; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	++pc;
003014   0e01     movlw	0x1                	MOVLW	0x01
003016   6e11     movwf	0x11, 0            	MOVWF	r0x11
003018   6a12     clrf	0x12, 0             	CLRF	r0x12
                                           ;	.line	130; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	--width;
00301a   0eff     movlw	0xff               	MOVLW	0xff
00301c   2609     addwf	0x9, 0x1, 0        	ADDWF	r0x09, F
00301e   a0d8     btfss	0xd8, 0, 0         	BTFSS	STATUS, 0
003020   060a     decf	0xa, 0x1, 0         	DECF	r0x0a, F
003022   d00d     bra	0x303e               	BRA	_00215_DS_
                                           _00211_DS_:
                                           ;	.line	134; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	*--s = '-';
003024   0eff     movlw	0xff               	MOVLW	0xff
003026   2603     addwf	0x3, 0x1, 0        	ADDWF	r0x03, F
003028   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
00302a   2207     addwfc	0x7, 0x1, 0       	ADDWFC	r0x07, F
00302c   0e2d     movlw	0x2d               	MOVLW	0x2d
00302e   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003030   c003     movff	0x3, 0xfe9         	MOVFF	r0x03, FSR0L
003032   ffe9
003034   c004     movff	0x4, 0xff3         	MOVFF	r0x04, PRODL
003036   fff3
003038   5007     movf	0x7, 0, 0           	MOVF	r0x07, W
00303a   ec31     call	0x62, 0             	CALL	__gptrput1
00303c   f000
                                           _00215_DS_:
                                           ;	.line	138; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	return pc + pprints(out, s, width, pad);
00303e   500c     movf	0xc, 0, 0           	MOVF	r0x0c, W
003040   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003042   500b     movf	0xb, 0, 0           	MOVF	r0x0b, W
003044   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003046   500a     movf	0xa, 0, 0           	MOVF	r0x0a, W
003048   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00304a   5009     movf	0x9, 0, 0           	MOVF	r0x09, W
00304c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00304e   5007     movf	0x7, 0, 0           	MOVF	r0x07, W
003050   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003052   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
003054   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003056   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
003058   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00305a   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
00305c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00305e   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
003060   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003062   5000     movf	0, 0, 0             	MOVF	r0x00, W
003064   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003066   ec7a     call	0x30f4, 0           	CALL	_pprints
003068   f018
00306a   6e00     movwf	0, 0               	MOVWF	r0x00
00306c   cff3     movff	0xff3, 0x1         	MOVFF	PRODL, r0x01
00306e   f001
003070   0e0a     movlw	0xa                	MOVLW	0x0a
003072   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
003074   5000     movf	0, 0, 0             	MOVF	r0x00, W
003076   2611     addwf	0x11, 0x1, 0       	ADDWF	r0x11, F
003078   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
00307a   2212     addwfc	0x12, 0x1, 0      	ADDWFC	r0x12, F
00307c   c012     movff	0x12, 0xff3        	MOVFF	r0x12, PRODL
00307e   fff3
003080   5011     movf	0x11, 0, 0          	MOVF	r0x11, W
                                           _00216_DS_:
003082   cfe4     movff	0xfe4, 0x1a        	MOVFF	PREINC1, r0x1a
003084   f01a
003086   cfe4     movff	0xfe4, 0x19        	MOVFF	PREINC1, r0x19
003088   f019
00308a   cfe4     movff	0xfe4, 0x18        	MOVFF	PREINC1, r0x18
00308c   f018
00308e   cfe4     movff	0xfe4, 0x17        	MOVFF	PREINC1, r0x17
003090   f017
003092   cfe4     movff	0xfe4, 0x16        	MOVFF	PREINC1, r0x16
003094   f016
003096   cfe4     movff	0xfe4, 0x15        	MOVFF	PREINC1, r0x15
003098   f015
00309a   cfe4     movff	0xfe4, 0x14        	MOVFF	PREINC1, r0x14
00309c   f014
00309e   cfe4     movff	0xfe4, 0x13        	MOVFF	PREINC1, r0x13
0030a0   f013
0030a2   cfe4     movff	0xfe4, 0x12        	MOVFF	PREINC1, r0x12
0030a4   f012
0030a6   cfe4     movff	0xfe4, 0x11        	MOVFF	PREINC1, r0x11
0030a8   f011
0030aa   cfe4     movff	0xfe4, 0x10        	MOVFF	PREINC1, r0x10
0030ac   f010
0030ae   cfe4     movff	0xfe4, 0xf         	MOVFF	PREINC1, r0x0f
0030b0   f00f
0030b2   cfe4     movff	0xfe4, 0xe         	MOVFF	PREINC1, r0x0e
0030b4   f00e
0030b6   cfe4     movff	0xfe4, 0xd         	MOVFF	PREINC1, r0x0d
0030b8   f00d
0030ba   cfe4     movff	0xfe4, 0xc         	MOVFF	PREINC1, r0x0c
0030bc   f00c
0030be   cfe4     movff	0xfe4, 0xb         	MOVFF	PREINC1, r0x0b
0030c0   f00b
0030c2   cfe4     movff	0xfe4, 0xa         	MOVFF	PREINC1, r0x0a
0030c4   f00a
0030c6   cfe4     movff	0xfe4, 0x9         	MOVFF	PREINC1, r0x09
0030c8   f009
0030ca   cfe4     movff	0xfe4, 0x8         	MOVFF	PREINC1, r0x08
0030cc   f008
0030ce   cfe4     movff	0xfe4, 0x7         	MOVFF	PREINC1, r0x07
0030d0   f007
0030d2   cfe4     movff	0xfe4, 0x6         	MOVFF	PREINC1, r0x06
0030d4   f006
0030d6   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
0030d8   f005
0030da   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
0030dc   f004
0030de   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
0030e0   f003
0030e2   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
0030e4   f002
0030e6   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
0030e8   f001
0030ea   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0030ec   f000
0030ee   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
0030f0   ffd9
0030f2   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__pprints	code
                                           _pprints:
                                           ;	.line	50; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	static int pprints(char **out, const char *string, int width, int pad)
0030f4   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
0030f6   ffe5
0030f8   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
0030fa   ffd9
0030fc   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
0030fe   ffe5
003100   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
003102   ffe5
003104   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
003106   ffe5
003108   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
00310a   ffe5
00310c   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
00310e   ffe5
003110   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
003112   ffe5
003114   c006     movff	0x6, 0xfe5         	MOVFF	r0x06, POSTDEC1
003116   ffe5
003118   c007     movff	0x7, 0xfe5         	MOVFF	r0x07, POSTDEC1
00311a   ffe5
00311c   c008     movff	0x8, 0xfe5         	MOVFF	r0x08, POSTDEC1
00311e   ffe5
003120   c009     movff	0x9, 0xfe5         	MOVFF	r0x09, POSTDEC1
003122   ffe5
003124   c00a     movff	0xa, 0xfe5         	MOVFF	r0x0a, POSTDEC1
003126   ffe5
003128   c00b     movff	0xb, 0xfe5         	MOVFF	r0x0b, POSTDEC1
00312a   ffe5
00312c   c00c     movff	0xc, 0xfe5         	MOVFF	r0x0c, POSTDEC1
00312e   ffe5
003130   c00e     movff	0xe, 0xfe5         	MOVFF	r0x0e, POSTDEC1
003132   ffe5
003134   c00f     movff	0xf, 0xfe5         	MOVFF	r0x0f, POSTDEC1
003136   ffe5
003138   c010     movff	0x10, 0xfe5        	MOVFF	r0x10, POSTDEC1
00313a   ffe5
00313c   c011     movff	0x11, 0xfe5        	MOVFF	r0x11, POSTDEC1
00313e   ffe5
003140   c012     movff	0x12, 0xfe5        	MOVFF	r0x12, POSTDEC1
003142   ffe5
003144   c013     movff	0x13, 0xfe5        	MOVFF	r0x13, POSTDEC1
003146   ffe5
003148   0e02     movlw	0x2                	MOVLW	0x02
00314a   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
00314c   f000
00314e   0e03     movlw	0x3                	MOVLW	0x03
003150   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
003152   f001
003154   0e04     movlw	0x4                	MOVLW	0x04
003156   cfdb     movff	0xfdb, 0x2         	MOVFF	PLUSW2, r0x02
003158   f002
00315a   0e05     movlw	0x5                	MOVLW	0x05
00315c   cfdb     movff	0xfdb, 0x3         	MOVFF	PLUSW2, r0x03
00315e   f003
003160   0e06     movlw	0x6                	MOVLW	0x06
003162   cfdb     movff	0xfdb, 0x4         	MOVFF	PLUSW2, r0x04
003164   f004
003166   0e07     movlw	0x7                	MOVLW	0x07
003168   cfdb     movff	0xfdb, 0x5         	MOVFF	PLUSW2, r0x05
00316a   f005
00316c   0e08     movlw	0x8                	MOVLW	0x08
00316e   cfdb     movff	0xfdb, 0x6         	MOVFF	PLUSW2, r0x06
003170   f006
003172   0e09     movlw	0x9                	MOVLW	0x09
003174   cfdb     movff	0xfdb, 0x7         	MOVFF	PLUSW2, r0x07
003176   f007
003178   0e0a     movlw	0xa                	MOVLW	0x0a
00317a   cfdb     movff	0xfdb, 0x8         	MOVFF	PLUSW2, r0x08
00317c   f008
00317e   0e0b     movlw	0xb                	MOVLW	0x0b
003180   cfdb     movff	0xfdb, 0x9         	MOVFF	PLUSW2, r0x09
003182   f009
                                           ;	.line	52; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	register int pc = 0;
003184   6a0a     clrf	0xa, 0              	CLRF	r0x0a
003186   6a0b     clrf	0xb, 0              	CLRF	r0x0b
                                           ;	.line	53; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	int padchar = ' ';
003188   0e20     movlw	0x20               	MOVLW	0x20
00318a   6e0c     movwf	0xc, 0             	MOVWF	r0x0c
                                           ;	.line	57; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	if (width > 0)
00318c   5007     movf	0x7, 0, 0           	MOVF	r0x07, W
00318e   0f80     addlw	0x80               	ADDLW	0x80
003190   0f80     addlw	0x80               	ADDLW	0x80
003192   e102     bnz	0x3198               	BNZ	_00189_DS_
003194   0e01     movlw	0x1                	MOVLW	0x01
003196   5c06     subwf	0x6, 0, 0          	SUBWF	r0x06, W
                                           _00189_DS_:
003198   e330     bnc	0x31fa               	BNC	_00153_DS_
                                           ;	.line	59; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	for (ptr = string; *ptr; ++ptr)
00319a   6a0e     clrf	0xe, 0              	CLRF	r0x0e
00319c   6a0f     clrf	0xf, 0              	CLRF	r0x0f
00319e   c003     movff	0x3, 0x10          	MOVFF	r0x03, r0x10
0031a0   f010
0031a2   c004     movff	0x4, 0x11          	MOVFF	r0x04, r0x11
0031a4   f011
0031a6   c005     movff	0x5, 0x12          	MOVFF	r0x05, r0x12
0031a8   f012
                                           _00156_DS_:
0031aa   c010     movff	0x10, 0xfe9        	MOVFF	r0x10, FSR0L
0031ac   ffe9
0031ae   c011     movff	0x11, 0xff3        	MOVFF	r0x11, PRODL
0031b0   fff3
0031b2   5012     movf	0x12, 0, 0          	MOVF	r0x12, W
0031b4   ec29     call	0x52, 0             	CALL	__gptrget1
0031b6   f000
0031b8   6e13     movwf	0x13, 0            	MOVWF	r0x13
0031ba   5013     movf	0x13, 0, 0          	MOVF	r0x13, W
0031bc   e009     bz	0x31d0                	BZ	_00159_DS_
                                           ;	.line	60; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	++len;
0031be   2a0e     incf	0xe, 0x1, 0         	INCF	r0x0e, F
0031c0   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
0031c2   2a0f     incf	0xf, 0x1, 0         	INCF	r0x0f, F
                                           ;	.line	59; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	for (ptr = string; *ptr; ++ptr)
0031c4   2a10     incf	0x10, 0x1, 0        	INCF	r0x10, F
0031c6   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
0031c8   2a11     incf	0x11, 0x1, 0        	INCF	r0x11, F
0031ca   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
0031cc   2a12     incf	0x12, 0x1, 0        	INCF	r0x12, F
0031ce   d7ed     bra	0x31aa               	BRA	_00156_DS_
                                           _00159_DS_:
                                           ;	.line	61; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	if (len >= width)
0031d0   500f     movf	0xf, 0, 0           	MOVF	r0x0f, W
0031d2   0f80     addlw	0x80               	ADDLW	0x80
0031d4   6ef3     movwf	0xf3, 0            	MOVWF	PRODL
0031d6   5007     movf	0x7, 0, 0           	MOVF	r0x07, W
0031d8   0f80     addlw	0x80               	ADDLW	0x80
0031da   5cf3     subwf	0xf3, 0, 0         	SUBWF	PRODL, W
0031dc   e102     bnz	0x31e2               	BNZ	_00190_DS_
0031de   5006     movf	0x6, 0, 0           	MOVF	r0x06, W
0031e0   5c0e     subwf	0xe, 0, 0          	SUBWF	r0x0e, W
                                           _00190_DS_:
0031e2   e303     bnc	0x31ea               	BNC	_00148_DS_
                                           ;	.line	62; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	width = 0;
0031e4   6a06     clrf	0x6, 0              	CLRF	r0x06
0031e6   6a07     clrf	0x7, 0              	CLRF	r0x07
0031e8   d004     bra	0x31f2               	BRA	_00149_DS_
                                           _00148_DS_:
                                           ;	.line	64; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	width -= len;
0031ea   500e     movf	0xe, 0, 0           	MOVF	r0x0e, W
0031ec   5e06     subwf	0x6, 0x1, 0        	SUBWF	r0x06, F
0031ee   500f     movf	0xf, 0, 0           	MOVF	r0x0f, W
0031f0   5a07     subwfb	0x7, 0x1, 0       	SUBWFB	r0x07, F
                                           _00149_DS_:
                                           ;	.line	65; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	if (pad & PAD_ZERO) padchar = '0';
0031f2   a208     btfss	0x8, 0x1, 0        	BTFSS	r0x08, 1
0031f4   d002     bra	0x31fa               	BRA	_00153_DS_
0031f6   0e30     movlw	0x30               	MOVLW	0x30
0031f8   6e0c     movwf	0xc, 0             	MOVWF	r0x0c
                                           _00153_DS_:
                                           ;	.line	67; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	if (!(pad & PAD_RIGHT))
0031fa   b008     btfsc	0x8, 0, 0          	BTFSC	r0x08, 0
0031fc   d029     bra	0x3250               	BRA	_00182_DS_
0031fe   6a08     clrf	0x8, 0              	CLRF	r0x08
003200   6a09     clrf	0x9, 0              	CLRF	r0x09
003202   c006     movff	0x6, 0xe           	MOVFF	r0x06, r0x0e
003204   f00e
003206   c007     movff	0x7, 0xf           	MOVFF	r0x07, r0x0f
003208   f00f
                                           _00160_DS_:
                                           ;	.line	69; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	for ( ; width > 0; --width)
00320a   500f     movf	0xf, 0, 0           	MOVF	r0x0f, W
00320c   0f80     addlw	0x80               	ADDLW	0x80
00320e   0f80     addlw	0x80               	ADDLW	0x80
003210   e102     bnz	0x3216               	BNZ	_00193_DS_
003212   0e01     movlw	0x1                	MOVLW	0x01
003214   5c0e     subwf	0xe, 0, 0          	SUBWF	r0x0e, W
                                           _00193_DS_:
003216   e314     bnc	0x3240               	BNC	_00186_DS_
                                           ; #	MOVF	r0x0c, W
                                           ; #	MOVWF	r0x10
                                           ; #	MOVF	r0x10, W
                                           ;	.line	71; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	pprintchar(out, padchar);
003218   500c     movf	0xc, 0, 0           	MOVF	r0x0c, W
00321a   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00321c   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
00321e   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003220   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
003222   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003224   5000     movf	0, 0, 0             	MOVF	r0x00, W
003226   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003228   ec27     call	0x344e, 0           	CALL	_pprintchar
00322a   f01a
00322c   0e04     movlw	0x4                	MOVLW	0x04
00322e   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	72; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	++pc;
003230   2a08     incf	0x8, 0x1, 0         	INCF	r0x08, F
003232   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
003234   2a09     incf	0x9, 0x1, 0         	INCF	r0x09, F
                                           ;	.line	69; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	for ( ; width > 0; --width)
003236   0eff     movlw	0xff               	MOVLW	0xff
003238   260e     addwf	0xe, 0x1, 0        	ADDWF	r0x0e, F
00323a   a0d8     btfss	0xd8, 0, 0         	BTFSS	STATUS, 0
00323c   060f     decf	0xf, 0x1, 0         	DECF	r0x0f, F
00323e   d7e5     bra	0x320a               	BRA	_00160_DS_
                                           _00186_DS_:
003240   c008     movff	0x8, 0xa           	MOVFF	r0x08, r0x0a
003242   f00a
003244   c009     movff	0x9, 0xb           	MOVFF	r0x09, r0x0b
003246   f00b
003248   c00e     movff	0xe, 0x6           	MOVFF	r0x0e, r0x06
00324a   f006
00324c   c00f     movff	0xf, 0x7           	MOVFF	r0x0f, r0x07
00324e   f007
                                           _00182_DS_:
003250   c00a     movff	0xa, 0x8           	MOVFF	r0x0a, r0x08
003252   f008
003254   c00b     movff	0xb, 0x9           	MOVFF	r0x0b, r0x09
003256   f009
                                           _00164_DS_:
                                           ;	.line	75; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	for ( ; *string ; ++string)
003258   c003     movff	0x3, 0xfe9         	MOVFF	r0x03, FSR0L
00325a   ffe9
00325c   c004     movff	0x4, 0xff3         	MOVFF	r0x04, PRODL
00325e   fff3
003260   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
003262   ec29     call	0x52, 0             	CALL	__gptrget1
003264   f000
003266   6e0a     movwf	0xa, 0             	MOVWF	r0x0a
003268   500a     movf	0xa, 0, 0           	MOVF	r0x0a, W
00326a   e015     bz	0x3296                	BZ	_00184_DS_
                                           ;	.line	77; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	pprintchar(out, *string);
00326c   500a     movf	0xa, 0, 0           	MOVF	r0x0a, W
00326e   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003270   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
003272   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003274   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
003276   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003278   5000     movf	0, 0, 0             	MOVF	r0x00, W
00327a   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00327c   ec27     call	0x344e, 0           	CALL	_pprintchar
00327e   f01a
003280   0e04     movlw	0x4                	MOVLW	0x04
003282   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	78; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	++pc;
003284   2a08     incf	0x8, 0x1, 0         	INCF	r0x08, F
003286   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
003288   2a09     incf	0x9, 0x1, 0         	INCF	r0x09, F
                                           ;	.line	75; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	for ( ; *string ; ++string)
00328a   2a03     incf	0x3, 0x1, 0         	INCF	r0x03, F
00328c   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
00328e   2a04     incf	0x4, 0x1, 0         	INCF	r0x04, F
003290   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
003292   2a05     incf	0x5, 0x1, 0         	INCF	r0x05, F
003294   d7e1     bra	0x3258               	BRA	_00164_DS_
                                           _00184_DS_:
003296   c008     movff	0x8, 0x3           	MOVFF	r0x08, r0x03
003298   f003
00329a   c009     movff	0x9, 0x4           	MOVFF	r0x09, r0x04
00329c   f004
00329e   c006     movff	0x6, 0x5           	MOVFF	r0x06, r0x05
0032a0   f005
0032a2   c007     movff	0x7, 0x6           	MOVFF	r0x07, r0x06
0032a4   f006
                                           _00168_DS_:
                                           ;	.line	80; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	for ( ; width > 0; --width)
0032a6   5006     movf	0x6, 0, 0           	MOVF	r0x06, W
0032a8   0f80     addlw	0x80               	ADDLW	0x80
0032aa   0f80     addlw	0x80               	ADDLW	0x80
0032ac   e102     bnz	0x32b2               	BNZ	_00194_DS_
0032ae   0e01     movlw	0x1                	MOVLW	0x01
0032b0   5c05     subwf	0x5, 0, 0          	SUBWF	r0x05, W
                                           _00194_DS_:
0032b2   e314     bnc	0x32dc               	BNC	_00171_DS_
                                           ; #	MOVF	r0x0c, W
                                           ; #	MOVWF	r0x07
                                           ; #	MOVF	r0x07, W
                                           ;	.line	82; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	pprintchar(out, padchar);
0032b4   500c     movf	0xc, 0, 0           	MOVF	r0x0c, W
0032b6   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0032b8   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0032ba   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0032bc   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
0032be   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0032c0   5000     movf	0, 0, 0             	MOVF	r0x00, W
0032c2   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0032c4   ec27     call	0x344e, 0           	CALL	_pprintchar
0032c6   f01a
0032c8   0e04     movlw	0x4                	MOVLW	0x04
0032ca   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	83; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	++pc;
0032cc   2a03     incf	0x3, 0x1, 0         	INCF	r0x03, F
0032ce   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
0032d0   2a04     incf	0x4, 0x1, 0         	INCF	r0x04, F
                                           ;	.line	80; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	for ( ; width > 0; --width)
0032d2   0eff     movlw	0xff               	MOVLW	0xff
0032d4   2605     addwf	0x5, 0x1, 0        	ADDWF	r0x05, F
0032d6   a0d8     btfss	0xd8, 0, 0         	BTFSS	STATUS, 0
0032d8   0606     decf	0x6, 0x1, 0         	DECF	r0x06, F
0032da   d7e5     bra	0x32a6               	BRA	_00168_DS_
                                           _00171_DS_:
                                           ;	.line	86; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	return pc;
0032dc   c004     movff	0x4, 0xff3         	MOVFF	r0x04, PRODL
0032de   fff3
0032e0   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
0032e2   cfe4     movff	0xfe4, 0x13        	MOVFF	PREINC1, r0x13
0032e4   f013
0032e6   cfe4     movff	0xfe4, 0x12        	MOVFF	PREINC1, r0x12
0032e8   f012
0032ea   cfe4     movff	0xfe4, 0x11        	MOVFF	PREINC1, r0x11
0032ec   f011
0032ee   cfe4     movff	0xfe4, 0x10        	MOVFF	PREINC1, r0x10
0032f0   f010
0032f2   cfe4     movff	0xfe4, 0xf         	MOVFF	PREINC1, r0x0f
0032f4   f00f
0032f6   cfe4     movff	0xfe4, 0xe         	MOVFF	PREINC1, r0x0e
0032f8   f00e
0032fa   cfe4     movff	0xfe4, 0xc         	MOVFF	PREINC1, r0x0c
0032fc   f00c
0032fe   cfe4     movff	0xfe4, 0xb         	MOVFF	PREINC1, r0x0b
003300   f00b
003302   cfe4     movff	0xfe4, 0xa         	MOVFF	PREINC1, r0x0a
003304   f00a
003306   cfe4     movff	0xfe4, 0x9         	MOVFF	PREINC1, r0x09
003308   f009
00330a   cfe4     movff	0xfe4, 0x8         	MOVFF	PREINC1, r0x08
00330c   f008
00330e   cfe4     movff	0xfe4, 0x7         	MOVFF	PREINC1, r0x07
003310   f007
003312   cfe4     movff	0xfe4, 0x6         	MOVFF	PREINC1, r0x06
003314   f006
003316   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
003318   f005
00331a   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
00331c   f004
00331e   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
003320   f003
003322   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
003324   f002
003326   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003328   f001
00332a   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
00332c   f000
00332e   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
003330   ffd9
003332   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__pprintchar	code
                                           _pprintchar:
                                           ;	.line	34; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	static void pprintchar(char **str, char c)
00344e   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
003450   ffe5
003452   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
003454   ffd9
003456   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003458   ffe5
00345a   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
00345c   ffe5
00345e   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
003460   ffe5
003462   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
003464   ffe5
003466   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
003468   ffe5
00346a   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
00346c   ffe5
00346e   c006     movff	0x6, 0xfe5         	MOVFF	r0x06, POSTDEC1
003470   ffe5
003472   0e02     movlw	0x2                	MOVLW	0x02
003474   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
003476   f000
003478   0e03     movlw	0x3                	MOVLW	0x03
00347a   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
00347c   f001
00347e   0e04     movlw	0x4                	MOVLW	0x04
003480   cfdb     movff	0xfdb, 0x2         	MOVFF	PLUSW2, r0x02
003482   f002
003484   0e05     movlw	0x5                	MOVLW	0x05
003486   cfdb     movff	0xfdb, 0x3         	MOVFF	PLUSW2, r0x03
003488   f003
                                           ;	.line	36; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	if (str)
00348a   5000     movf	0, 0, 0             	MOVF	r0x00, W
00348c   1001     iorwf	0x1, 0, 0          	IORWF	r0x01, W
00348e   1002     iorwf	0x2, 0, 0          	IORWF	r0x02, W
003490   e028     bz	0x34e2                	BZ	_00137_DS_
                                           ;	.line	38; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	**str = c;
003492   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
003494   ffe9
003496   c001     movff	0x1, 0xff3         	MOVFF	r0x01, PRODL
003498   fff3
00349a   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
00349c   ec2d     call	0x5a, 0             	CALL	__gptrget3
00349e   f000
0034a0   6e04     movwf	0x4, 0             	MOVWF	r0x04
0034a2   cff3     movff	0xff3, 0x5         	MOVFF	PRODL, r0x05
0034a4   f005
0034a6   cff4     movff	0xff4, 0x6         	MOVFF	PRODH, r0x06
0034a8   f006
0034aa   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
0034ac   ffe5
0034ae   c004     movff	0x4, 0xfe9         	MOVFF	r0x04, FSR0L
0034b0   ffe9
0034b2   c005     movff	0x5, 0xff3         	MOVFF	r0x05, PRODL
0034b4   fff3
0034b6   5006     movf	0x6, 0, 0           	MOVF	r0x06, W
0034b8   ec31     call	0x62, 0             	CALL	__gptrput1
0034ba   f000
                                           ;	.line	39; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	++(*str);
0034bc   2a04     incf	0x4, 0x1, 0         	INCF	r0x04, F
0034be   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
0034c0   2a05     incf	0x5, 0x1, 0         	INCF	r0x05, F
0034c2   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
0034c4   2a06     incf	0x6, 0x1, 0         	INCF	r0x06, F
0034c6   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
0034c8   ffe5
0034ca   c005     movff	0x5, 0xff4         	MOVFF	r0x05, PRODH
0034cc   fff4
0034ce   c006     movff	0x6, 0xff6         	MOVFF	r0x06, TBLPTRL
0034d0   fff6
0034d2   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
0034d4   ffe9
0034d6   c001     movff	0x1, 0xff3         	MOVFF	r0x01, PRODL
0034d8   fff3
0034da   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0034dc   ec35     call	0x6a, 0             	CALL	__gptrput3
0034de   f000
0034e0   d017     bra	0x3510               	BRA	_00139_DS_
                                           _00137_DS_:
                                           ;	.line	43; /opt/pinguino/pinguino32/p8/include/pinguino/core/stdio.c	pputchar(c);
0034e2   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
0034e4   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0034e6   cff2     movff	0xff2, 0xfe5       	MOVFF	INTCON, POSTDEC1
0034e8   ffe5
0034ea   9ef2     bcf	0xf2, 0x7, 0         	BCF	INTCON, 7
0034ec   0005     push                     	PUSH	
0034ee   0e0c     movlw	0xc                	MOVLW	LOW(_00142_DS_)
0034f0   6efd     movwf	0xfd, 0            	MOVWF	TOSL
0034f2   0e35     movlw	0x35               	MOVLW	HIGH(_00142_DS_)
0034f4   6efe     movwf	0xfe, 0            	MOVWF	TOSH
0034f6   0e00     movlw	0                  	MOVLW	UPPER(_00142_DS_)
0034f8   6eff     movwf	0xff, 0            	MOVWF	TOSU
0034fa   50e4     movf	0xe4, 0, 0          	MOVF	PREINC1, W
0034fc   6ef2     movwf	0xf2, 0            	MOVWF	INTCON
0034fe   c2de     movff	0x2de, 0xffb       	MOVFF	(_pputchar + 2), PCLATU
003500   fffb
003502   c2dd     movff	0x2dd, 0xffa       	MOVFF	(_pputchar + 1), PCLATH
003504   fffa
003506   0102     movlb	0x2                	BANKSEL	_pputchar
003508   51dc     movf	0xdc, 0, 0x1        	MOVF	_pputchar, W, B
00350a   6ef9     movwf	0xf9, 0            	MOVWF	PCL
                                           _00142_DS_:
00350c   0e01     movlw	0x1                	MOVLW	0x01
00350e   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           _00139_DS_:
003510   cfe4     movff	0xfe4, 0x6         	MOVFF	PREINC1, r0x06
003512   f006
003514   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
003516   f005
003518   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
00351a   f004
00351c   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
00351e   f003
003520   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
003522   f002
003524   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003526   f001
003528   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
00352a   f000
00352c   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
00352e   ffd9
003530   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__analogread	code
                                           _analogread:
                                           ;	.line	40; /opt/pinguino/pinguino32/p8/include/pinguino/core/analog.c	unsigned int analogread(unsigned char channel)
003a74   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
003a76   ffe5
003a78   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
003a7a   ffd9
003a7c   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003a7e   ffe5
003a80   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
003a82   ffe5
003a84   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
003a86   ffe5
003a88   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
003a8a   ffe5
003a8c   0e02     movlw	0x2                	MOVLW	0x02
003a8e   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
003a90   f000
                                           ;	.line	55; /opt/pinguino/pinguino32/p8/include/pinguino/core/analog.c	ADCON0=(channel-13)*4;
003a92   0ef3     movlw	0xf3               	MOVLW	0xf3
003a94   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
                                           ; ;multiply lit val:0x04 by variable r0x00 and store in _ADCON0
                                           ; ;Unrolled 8 X 8 multiplication
                                           ; ;FIXME: the function does not support result==WREG
003a96   5000     movf	0, 0, 0             	MOVF	r0x00, W
003a98   0d04     mullw	0x4                	MULLW	0x04
003a9a   cff3     movff	0xff3, 0xfc2       	MOVFF	PRODL, _ADCON0
003a9c   ffc2
                                           ;	.line	59; /opt/pinguino/pinguino32/p8/include/pinguino/core/analog.c	ADCON0bits.ADON=1;
003a9e   80c2     bsf	0xc2, 0, 0           	BSF	_ADCON0bits, 0
                                           ;	.line	60; /opt/pinguino/pinguino32/p8/include/pinguino/core/analog.c	for (result=1;result<10;result++) __asm NOP __endasm;
003aa0   0e09     movlw	0x9                	MOVLW	0x09
003aa2   6e00     movwf	0, 0               	MOVWF	r0x00
003aa4   6a01     clrf	0x1, 0              	CLRF	r0x01
                                           _00130_DS_:
003aa6   0000     nop                      	NOP 
003aa8   0eff     movlw	0xff               	MOVLW	0xff
003aaa   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
003aac   a0d8     btfss	0xd8, 0, 0         	BTFSS	STATUS, 0
003aae   0601     decf	0x1, 0x1, 0         	DECF	r0x01, F
003ab0   5000     movf	0, 0, 0             	MOVF	r0x00, W
003ab2   1001     iorwf	0x1, 0, 0          	IORWF	r0x01, W
003ab4   e1f8     bnz	0x3aa6               	BNZ	_00130_DS_
                                           ;	.line	61; /opt/pinguino/pinguino32/p8/include/pinguino/core/analog.c	ADCON0bits.GO=1;
003ab6   82c2     bsf	0xc2, 0x1, 0         	BSF	_ADCON0bits, 1
                                           _00125_DS_:
                                           ;	.line	62; /opt/pinguino/pinguino32/p8/include/pinguino/core/analog.c	while (ADCON0bits.GO);
003ab8   b2c2     btfsc	0xc2, 0x1, 0       	BTFSC	_ADCON0bits, 1
003aba   d7fe     bra	0x3ab8               	BRA	_00125_DS_
                                           ;	.line	63; /opt/pinguino/pinguino32/p8/include/pinguino/core/analog.c	result=ADRESH<<8;
003abc   cfc4     movff	0xfc4, 0           	MOVFF	_ADRESH, r0x00
003abe   f000
003ac0   6a01     clrf	0x1, 0              	CLRF	r0x01
003ac2   5000     movf	0, 0, 0             	MOVF	r0x00, W
003ac4   6e03     movwf	0x3, 0             	MOVWF	r0x03
003ac6   6a02     clrf	0x2, 0              	CLRF	r0x02
                                           ;	.line	64; /opt/pinguino/pinguino32/p8/include/pinguino/core/analog.c	result+=ADRESL;
003ac8   cfc3     movff	0xfc3, 0           	MOVFF	_ADRESL, r0x00
003aca   f000
003acc   6a01     clrf	0x1, 0              	CLRF	r0x01
003ace   5000     movf	0, 0, 0             	MOVF	r0x00, W
003ad0   2602     addwf	0x2, 0x1, 0        	ADDWF	r0x02, F
003ad2   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
003ad4   2203     addwfc	0x3, 0x1, 0       	ADDWFC	r0x03, F
                                           ;	.line	65; /opt/pinguino/pinguino32/p8/include/pinguino/core/analog.c	ADCON0bits.ADON=0;
003ad6   90c2     bcf	0xc2, 0, 0           	BCF	_ADCON0bits, 0
                                           ;	.line	66; /opt/pinguino/pinguino32/p8/include/pinguino/core/analog.c	return(result);
003ad8   c003     movff	0x3, 0xff3         	MOVFF	r0x03, PRODL
003ada   fff3
003adc   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
003ade   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
003ae0   f003
003ae2   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
003ae4   f002
003ae6   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003ae8   f001
003aea   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003aec   f000
003aee   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
003af0   ffd9
003af2   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__analogReference	code
                                           _analogReference:
                                           ;	.line	32; /opt/pinguino/pinguino32/p8/include/pinguino/core/analog.c	void analogReference(unsigned char Type)
003c92   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
003c94   ffe5
003c96   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
003c98   ffd9
003c9a   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003c9c   ffe5
003c9e   0e02     movlw	0x2                	MOVLW	0x02
003ca0   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
003ca2   f000
                                           ; #	MOVF	r0x00, W
                                           ; #	BTFSS	STATUS, 2
                                           ; #	GOTO	_00113_DS_
                                           ; #	GOTO	_00115_DS_
                                           ; #	MOVF	r0x00, W
                                           ;	.line	34; /opt/pinguino/pinguino32/p8/include/pinguino/core/analog.c	if(Type == DEFAULT)			//the default analog reference of 5 volts (on 5V Arduino boards) or 3.3 volts (on 3.3V Arduino boards)
003ca4   5000     movf	0, 0, 0             	MOVF	r0x00, W
                                           ;	.line	35; /opt/pinguino/pinguino32/p8/include/pinguino/core/analog.c	ADCON1|=0x00;			//Vref+ = VDD
003ca6   e004     bz	0x3cb0                	BZ	_00115_DS_
                                           ;	.line	36; /opt/pinguino/pinguino32/p8/include/pinguino/core/analog.c	else if(Type == EXTERNAL)	//the voltage applied to the AREF pin (0 to 5V only) is used as the reference.
003ca8   5000     movf	0, 0, 0             	MOVF	r0x00, W
003caa   0a01     xorlw	0x1                	XORLW	0x01
003cac   e101     bnz	0x3cb0               	BNZ	_00115_DS_
                                           ;	.line	37; /opt/pinguino/pinguino32/p8/include/pinguino/core/analog.c	ADCON1|=0x10;			//Vref+ = External source
003cae   88c1     bsf	0xc1, 0x4, 0         	BSF	_ADCON1, 4
                                           _00115_DS_:
003cb0   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003cb2   f000
003cb4   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
003cb6   ffd9
003cb8   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__analog_init	code
                                           _analog_init:
                                           ;	.line	25; /opt/pinguino/pinguino32/p8/include/pinguino/core/analog.c	TRISA=TRISA | 0x2F;
003c12   0e2f     movlw	0x2f               	MOVLW	0x2f
003c14   1292     iorwf	0x92, 0x1, 0       	IORWF	_TRISA, F
                                           ;	.line	26; /opt/pinguino/pinguino32/p8/include/pinguino/core/analog.c	ADCON1=0x0A;
003c16   0e0a     movlw	0xa                	MOVLW	0x0a
003c18   6ec1     movwf	0xc1, 0            	MOVWF	_ADCON1
                                           ;	.line	27; /opt/pinguino/pinguino32/p8/include/pinguino/core/analog.c	ADCON2=0xBD;
003c1a   0ebd     movlw	0xbd               	MOVLW	0xbd
003c1c   6ec0     movwf	0xc0, 0            	MOVWF	_ADCON2
003c1e   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           __str_0:
003c20   6e28     movwf	0x28, 0            	DB	0x28, 0x6e, 0x75, 0x6c, 0x6c, 0x29, 0x00
003c22   6c75     negf	0x75, 0             
003c24   296c     incf	0x6c, 0, 0x1        
003c26   0000     nop                      
                                           ; ; Starting pCode block
                                           __str_1:
003c28   6f6e     movwf	0x6e, 0x1          	DB	0x6e, 0x6f, 0x74, 0x20, 0x79, 0x65, 0x74, 0x20, 0x69, 0x6d, 0x70, 0x6c
003c2a   2074     addwfc	0x74, 0, 0        
003c2c   6579     cpfsgt	0x79, 0x1         
003c2e   2074     addwfc	0x74, 0, 0        
003c30   6d69     negf	0x69, 0x1           
003c32   6c70     negf	0x70, 0             
003c34   6d65     negf	0x65, 0x1           	DB	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x64, 0x00, 0x00
003c36   6e65     movwf	0x65, 0            
003c38   6574     cpfsgt	0x74, 0x1         
003c3a   0064     dw	0x64  ;unknown opcode 
003c3c   0000     nop                      
                                           ; ; Starting pCode block
                                           __str_2:
003c3e   6325     cpfseq	0x25, 0x1         	DB	0x25, 0x63, 0x00
003c40   0000     nop                      
                                           ; ; Starting pCode block
                                           __str_3:
003c42   6425     cpfsgt	0x25, 0           	DB	0x25, 0x64, 0x00
003c44   0000     nop                      
                                           ; ; Starting pCode block
                                           __str_4:
003c46   7825     btg	0x25, 0x4, 0         	DB	0x25, 0x78, 0x00
003c48   0000     nop                      
                                           ; ; Starting pCode block
                                           __str_5:
003c4a   6f25     movwf	0x25, 0x1          	DB	0x25, 0x6f, 0x00
003c4c   0000     nop                      
                                           ; ; Starting pCode block
                                           __str_6:
003c4e   6225     cpfseq	0x25, 0           	DB	0x25, 0x62, 0x00
003c50   0000     nop                      
                                           ; ; Starting pCode block
                                           __str_7:
003c52   0d0a     mullw	0xa                	DB	0x0a, 0x0d, 0x00
003c54   0000     nop                      
                                           
                                           
                                           ; Statistics:
                                           ; code size:	 5952 (0x1740) bytes ( 4.54%)
                                           ;           	 2976 (0x0ba0) words
                                           ; udata size:	  230 (0x00e6) bytes (12.83%)
                                           ; access size:	   27 (0x001b) bytes
                                           
                                           
                                           	end
